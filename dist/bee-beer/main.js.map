{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/background-clouds/background-clouds.component.ts","./src/app/components/background-clouds/background-clouds.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/menu-lateral/menu-lateral.component.ts","./src/app/components/menu-lateral/menu-lateral.component.html","./src/app/components/menu-principal/menu-principal.component.ts","./src/app/components/menu-principal/menu-principal.component.html","./src/app/components/terminal/terminal.component.ts","./src/app/components/terminal/terminal.component.html","./src/app/models/colaborador/colaborador.ts","./src/app/models/colaborador/contato.ts","./src/app/models/colaborador/permissao.ts","./src/app/models/empresa/empresa.ts","./src/app/models/empresa/identidade-visual.ts","./src/app/models/empresa/paleta.ts","./src/app/models/empresa/parceiro.ts","./src/app/models/endereco/endereco.ts","./src/app/models/enum/area-atuacao.enum.ts","./src/app/models/enum/situacao-estoque.enum.ts","./src/app/models/enum/situacao.enum.ts","./src/app/models/enum/tipo-imagem.enum.ts","./src/app/models/enum/tipo-ingresso.enum.ts","./src/app/models/enum/tipo-medida.enum.ts","./src/app/models/enum/tipo-permissao.enum.ts","./src/app/models/enum/tipo-pessoa.enum.ts","./src/app/models/enum/tipo-produto.enum.ts","./src/app/models/imagem.ts","./src/app/models/ingresso/ingresso.ts","./src/app/models/produto/bebida.ts","./src/app/models/produto/brinde.ts","./src/app/models/produto/comida.ts","./src/app/models/produto/produto.ts","./src/app/models/produto/restricoes.ts","./src/app/models/regra.ts","./src/app/models/usuario/login.ts","./src/app/models/usuario/usuario.ts","./src/app/pages/cadastro/cadastro.component.ts","./src/app/pages/cadastro/cadastro.component.html","./src/app/pages/cadastro/colaborador/colaborador.component.ts","./src/app/pages/cadastro/colaborador/colaborador.component.html","./src/app/pages/cadastro/endereco/endereco.component.ts","./src/app/pages/cadastro/endereco/endereco.component.html","./src/app/pages/cadastro/parceiro/parceiro.component.ts","./src/app/pages/cadastro/parceiro/parceiro.component.html","./src/app/pages/cadastro/produto/produto.component.ts","./src/app/pages/cadastro/produto/produto.component.html","./src/app/pages/goodbye/goodbye.component.ts","./src/app/pages/goodbye/goodbye.component.html","./src/app/pages/hello/hello.component.ts","./src/app/pages/hello/hello.component.html","./src/app/pages/perfil/perfil.component.ts","./src/app/pages/perfil/perfil.component.html","./src/app/services/colaborador.service.ts","./src/app/services/empresa.service.ts","./src/app/services/endereco.service.ts","./src/app/services/imagem.service.ts","./src/app/services/ingresso.service.ts","./src/app/services/produto.service.ts","./src/app/utils/estado.list.ts","./src/app/utils/geral.util.ts","./src/app/utils/menu.list.ts","./src/app/utils/mock-random.ts","./src/enviroments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HelloComponent } from './pages/hello/hello.component';\r\nimport { GoodbyeComponent } from './pages/goodbye/goodbye.component';\r\nimport { PerfilComponent } from './pages/perfil/perfil.component';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { ProdutoComponent } from './pages/cadastro/produto/produto.component';\r\nimport { EnderecoComponent } from './pages/cadastro/endereco/endereco.component';\r\nimport { ColaboradorComponent } from './pages/cadastro/colaborador/colaborador.component';\r\nimport { ParceiroComponent } from './pages/cadastro/parceiro/parceiro.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'hello', component: HelloComponent },\r\n  { path: 'goodbye', component: GoodbyeComponent },\r\n  { path: 'perfil', component: PerfilComponent },\r\n  { path: 'cadastro', component: CadastroComponent },\r\n  { path: 'cadastro/produto', component: ProdutoComponent },\r\n  { path: 'cadastro/endereco', component: EnderecoComponent },\r\n  { path: 'cadastro/colaborador', component: ColaboradorComponent },\r\n  { path: 'cadastro/parceiro', component: ParceiroComponent },\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { PrimeNGConfig } from 'primeng/api';             \r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'beeBeer';\r\n\r\n  constructor(private primengConfig: PrimeNGConfig) {}\r\n\r\n    ngOnInit() {\r\n        this.primengConfig.ripple = true;\r\n        this.primengConfig.zIndex = {\r\n          modal: 1100,    // dialog, sidebar\r\n          overlay: 1000,  // dropdown, overlaypanel\r\n          menu: 1000,     // overlay menus\r\n          tooltip: 1100   // tooltip\r\n        };\r\n        this.primengConfig.setTranslation({\r\n          accept: 'Aceitar',\r\n          reject: 'Cancelar',\r\n          //translations\r\n      });\r\n    }\r\n}\r\n","\r\n\r\n<app-menu-principal></app-menu-principal>\r\n\r\n  \r\n  <div class=\"content\" role=\"main\">\r\n  \r\n    \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n  <app-footer></app-footer>\r\n\r\n  <app-background-clouds></app-background-clouds>\r\n\r\n</div>\r\n\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/primeicons/4.1.0/js/primeicons.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/primeng/12.2.0/primeng.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n<script src=\"sweetalert2.all.min.js\"></script>\r\n<script src=\"https://rawgit.com/icebob/fakerator/master/dist/fakerator.js\"></script>\r\n\r\n\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HelloComponent } from './pages/hello/hello.component';\r\nimport { GoodbyeComponent } from './pages/goodbye/goodbye.component';\r\nimport { DockModule } from 'primeng/dock';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { CascadeSelectModule } from 'primeng/cascadeselect';\r\nimport { ChipsModule } from 'primeng/chips';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { ColorPickerModule } from 'primeng/colorpicker';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { SpeedDialModule } from 'primeng/speeddial';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ScrollerModule } from 'primeng/scroller';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { OrganizationChartModule } from 'primeng/organizationchart';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { PickListModule } from 'primeng/picklist';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\nimport { TimelineModule } from 'primeng/timeline';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { CardModule } from 'primeng/card';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { SplitterModule } from 'primeng/splitter';\r\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { MegaMenuModule } from 'primeng/megamenu';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TieredMenuModule } from 'primeng/tieredmenu';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { CarouselModule } from 'primeng/carousel';\r\nimport { GalleriaModule } from 'primeng/galleria';\r\nimport { ImageModule } from 'primeng/image';\r\nimport { DragDropModule } from 'primeng/dragdrop';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ChipModule } from 'primeng/chip';\r\nimport { ScrollTopModule } from 'primeng/scrolltop';\r\nimport { SkeletonModule } from 'primeng/skeleton';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { FocusTrapModule } from 'primeng/focustrap';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { AutoFocusModule } from 'primeng/autofocus';\r\nimport { AnimateModule } from 'primeng/animate';\r\nimport { OverlayModule } from 'primeng/overlay';\r\nimport { ConfirmationService, FilterService, MessageService } from 'primeng/api';\r\nimport { MenuPrincipalComponent } from './components/menu-principal/menu-principal.component';\r\nimport { TerminalComponent } from './components/terminal/terminal.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { BackgroundCloudsComponent } from './components/background-clouds/background-clouds.component';\r\nimport { PerfilComponent } from './pages/perfil/perfil.component';\r\nimport { ImagemService } from './services/imagem.service';\r\nimport { ProdutoService } from './services/produto.service';\r\nimport { EmpresaService } from './services/empresa.service';\r\nimport { ColaboradorService } from './services/colaborador.service';\r\nimport { IngressoService } from './services/ingresso.service';\r\nimport { MenuLateralComponent } from './components/menu-lateral/menu-lateral.component';\r\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\r\nimport { ProdutoComponent } from './pages/cadastro/produto/produto.component';\r\nimport { EnderecoComponent } from './pages/cadastro/endereco/endereco.component';\r\nimport { EnderecoService } from './services/endereco.service';\r\nimport { ColaboradorComponent } from './pages/cadastro/colaborador/colaborador.component';\r\nimport { ParceiroComponent } from './pages/cadastro/parceiro/parceiro.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HelloComponent,\r\n    GoodbyeComponent,\r\n    MenuPrincipalComponent,\r\n    MenuLateralComponent,\r\n    TerminalComponent,\r\n    FooterComponent,\r\n    BackgroundCloudsComponent,\r\n    PerfilComponent,\r\n    CadastroComponent,\r\n    ProdutoComponent,\r\n    EnderecoComponent,\r\n    ColaboradorComponent,\r\n    ParceiroComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    DockModule,\r\n    ButtonModule,\r\n    BrowserAnimationsModule,\r\n    AutoCompleteModule,\r\n    CalendarModule,\r\n    CascadeSelectModule,\r\n    CheckboxModule,\r\n    ChipsModule,\r\n    ColorPickerModule,\r\n    DropdownModule,\r\n    EditorModule,\r\n    InputTextModule,\r\n    RadioButtonModule,\r\n    InputMaskModule,\r\n    InputSwitchModule,\r\n    InputTextareaModule,\r\n    InputNumberModule,\r\n    KnobModule,\r\n    KeyFilterModule,\r\n    ListboxModule,\r\n    MultiSelectModule,\r\n    PasswordModule,\r\n    RatingModule,\r\n    SelectButtonModule,\r\n    SliderModule,\r\n    TreeSelectModule,\r\n    ToggleButtonModule,\r\n    SplitButtonModule,\r\n    SpeedDialModule,\r\n    TableModule,\r\n    ScrollerModule,\r\n    OrderListModule, \r\n    OrganizationChartModule, \r\n    PaginatorModule,\r\n    PickListModule,\r\n    TreeModule,\r\n    TreeTableModule, \r\n    TimelineModule,\r\n    AccordionModule, \r\n    CardModule,\r\n    DividerModule, \r\n    FieldsetModule, \r\n    PanelModule,\r\n    SplitterModule, \r\n    ScrollPanelModule, \r\n    TabViewModule,\r\n    ToolbarModule,\r\n    ConfirmDialogModule, \r\n    DialogModule,\r\n    DynamicDialogModule, \r\n    OverlayPanelModule,\r\n    SidebarModule,\r\n    TooltipModule,\r\n    FileUploadModule, \r\n    BreadcrumbModule,\r\n    MenuModule,\r\n    MenubarModule, \r\n    MegaMenuModule, \r\n    PanelMenuModule, \r\n    StepsModule,\r\n    TabMenuModule, \r\n    TieredMenuModule, \r\n    ChartModule,\r\n    MessagesModule, \r\n    ToastModule,\r\n    CarouselModule, \r\n    GalleriaModule,\r\n    ImageModule,\r\n    DragDropModule, \r\n    AvatarModule,\r\n    BadgeModule, \r\n    ChipModule,\r\n    ScrollTopModule, \r\n    SkeletonModule, \r\n    ProgressBarModule, \r\n    ProgressSpinnerModule, \r\n    FocusTrapModule, \r\n    RippleModule, \r\n    AutoFocusModule, \r\n    AnimateModule, \r\n    OverlayModule, \r\n     \r\n  ],\r\n  providers: [\r\n    FilterService,\r\n    MessageService, \r\n    ConfirmationService,\r\n    ColaboradorService,\r\n    EmpresaService, \r\n    ImagemService,\r\n    IngressoService,\r\n    ProdutoService,\r\n    EnderecoService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-background-clouds',\r\n  templateUrl: './background-clouds.component.html',\r\n  styleUrls: ['./background-clouds.component.scss']\r\n})\r\nexport class BackgroundCloudsComponent {\r\n  \r\n}\r\n","\r\n<svg id=\"clouds\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\r\n    <title></title>\r\n    <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\r\n  </svg>","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent {\r\n  \r\n}\r\n","\r\n<footer>\r\n      \r\n      \r\n</footer>","import { Component } from '@angular/core';\r\nimport { MenuService } from 'app/utils/menu.list';\r\nimport { MenuItem  } from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu-lateral',\r\n  templateUrl: './menu-lateral.component.html',\r\n  styleUrls: ['./menu-lateral.component.scss']\r\n})\r\nexport class MenuLateralComponent {\r\n  items: MenuItem[] | undefined;\r\n\r\n    position: string = 'left';\r\n\r\n    public static positionOptions = MenuService.getPositionOptions\r\n\r\n    ngOnInit() {\r\n        this.items = MenuService.getItemsMenuCadastro();\r\n    }\r\n}\r\n","\r\n<div >\r\n    <div class=\"dock-window\">\r\n        <p-dock [model]=\"items\" [position]=\"position\">\r\n            <ng-template pTemplate=\"item\" let-item>\r\n                <img [src]=\"item.icon\" [alt]=\"item.label\" pTooltip=\"{{item.label}}\" tooltipPosition=\"bottom\" showDelay=\"100\" width=\"100%\"/>\r\n            </ng-template>\r\n        </p-dock>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MenuService } from 'app/utils/menu.list';\r\nimport { MenuItem  } from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu-principal',\r\n  templateUrl: './menu-principal.component.html',\r\n  styleUrls: ['./menu-principal.component.scss']\r\n})\r\nexport class MenuPrincipalComponent {\r\n  items: MenuItem[] | undefined;\r\n\r\n    position: string = 'top';\r\n\r\n    public static positionOptions = MenuService.getPositionOptions\r\n\r\n    ngOnInit() {\r\n        this.items = MenuService.getItemsMenu();\r\n    }\r\n}\r\n","\r\n<div class=\"card\">\r\n    <!-- <div class=\"flex flex-wrap gap-3 mb-5\">\r\n        <p-radioButton *ngFor=\"let option of positionOptions\" [name]=\"option.label\" [value]=\"option.value\" [label]=\"option.label\" [(ngModel)]=\"position\" [inputId]=\"label\"></p-radioButton>\r\n    </div> -->\r\n    <div class=\"dock-window\">\r\n        <p-dock [model]=\"items\" [position]=\"position\">\r\n            <ng-template pTemplate=\"item\" let-item>\r\n                <img [src]=\"item.icon\" [alt]=\"item.label\" pTooltip=\"{{item.label}}\" tooltipPosition=\"bottom\" showDelay=\"100\" width=\"100%\"/>\r\n            </ng-template>\r\n        </p-dock>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MenuItem  } from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'app-terminal',\r\n  templateUrl: './terminal.component.html',\r\n  styleUrls: ['./terminal.component.scss']\r\n})\r\nexport class TerminalComponent {\r\n  items: MenuItem[] | undefined;\r\n\r\n    position: string = 'top';\r\n\r\n    positionOptions = [\r\n        {\r\n            label: 'Bottom',\r\n            value: 'bottom'\r\n        },\r\n        {\r\n            label: 'Top',\r\n            value: 'top'\r\n        },\r\n        {\r\n            label: 'Left',\r\n            value: 'left'\r\n        },\r\n        {\r\n            label: 'Right',\r\n            value: 'right'\r\n        }\r\n    ];\r\n\r\n    ngOnInit() {\r\n        this.items = [\r\n            {\r\n                label: 'Finder',\r\n                icon: 'https://primefaces.org/cdn/primeng/images/dock/finder.svg'\r\n            },\r\n            {\r\n                label: 'App Store',\r\n                icon: 'https://primefaces.org/cdn/primeng/images/dock/appstore.svg'\r\n            },\r\n            {\r\n                label: 'Photos',\r\n                icon: 'https://primefaces.org/cdn/primeng/images/dock/photos.svg'\r\n            },\r\n            {\r\n                label: 'Trash',\r\n                icon: 'https://primefaces.org/cdn/primeng/images/dock/trash.png'\r\n            }\r\n        ];\r\n    }\r\n}\r\n","<input type=\"hidden\" #selection>\r\n<!-- Terminal -->\r\n<div class=\"terminal\" [ngSwitch]=\"selection.value\">\r\n    <pre *ngSwitchDefault>\r\n  \r\n      ng generate component xyz\r\n    \r\n    </pre>\r\n    <pre *ngSwitchCase=\"'material'\">ng add @angular/material</pre>\r\n    <pre *ngSwitchCase=\"'pwa'\">ng add @angular/pwa</pre>\r\n    <pre *ngSwitchCase=\"'dependency'\">ng add _____</pre>\r\n    <pre *ngSwitchCase=\"'test'\">ng test</pre>\r\n    <pre *ngSwitchCase=\"'build'\">ng build</pre>\r\n</div>","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { TipoPermissaoEnum, TipoPermissaoEnumMock } from \"../enum/tipo-permissao.enum\";\r\nimport { Usuario, UsuarioMock } from \"../usuario/usuario\";\r\nimport { Contato, ContatoMock } from \"./contato\";\r\n\r\nexport interface Colaborador {\r\n    id: string;\r\n    usuario: Usuario\r\n    permissoes: TipoPermissaoEnum[] // decidir depois se crio um objeto\r\n    valido?: boolean\r\n    pix?: string\r\n    contato: Contato\r\n}\r\n\r\nexport class ColaboradorMock {\r\n    static lista: Colaborador[];\r\n\r\n    public static getMock(): Colaborador {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100) + '',\r\n            usuario: UsuarioMock.getMock(),\r\n            permissoes: TipoPermissaoEnumMock.getMockArray(),\r\n            valido: MockRandom.getBoolean(),\r\n            contato: ContatoMock.getMock()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Colaborador[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(ColaboradorMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\n\r\nexport interface Contato {\r\n    id: string;\r\n    telefone?: string\r\n    instagram?: string\r\n    linkedin?: string\r\n    email?: string\r\n    tiktok?: string\r\n}\r\n\r\nexport class ContatoMock {\r\n    static lista: Contato[];\r\n\r\n    public static getMock(): Contato {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100) + '',\r\n            telefone: '(' + MockRandom.getInteger(10, 99) + ')' + MockRandom.getInteger(100000000, 999999999),\r\n            instagram: '@' + MockRandom.getUserName(),\r\n            linkedin: MockRandom.getString(),\r\n            email:  MockRandom.getEmail(),\r\n            tiktok: '@' + MockRandom.getUserName()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Contato[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(ContatoMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { TipoPermissaoEnum, TipoPermissaoEnumMock } from \"../enum/tipo-permissao.enum\";\r\n\r\nexport interface Permissao {\r\n    id: number\r\n    nome: string\r\n    nivel: number\r\n    descricao?: string\r\n    paginas?: string\r\n    tipo: TipoPermissaoEnum\r\n}\r\n\r\nexport class PermissaoMock {\r\n    static lista: Permissao[];\r\n\r\n    public static getMock(): Permissao {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100),\r\n            nome: MockRandom.getName(),\r\n            nivel: MockRandom.getInteger(1, 10),\r\n            descricao: MockRandom.getSentence(),\r\n            paginas: MockRandom.getUrl(),\r\n            tipo: TipoPermissaoEnumMock.getMock()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Permissao[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(PermissaoMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Colaborador, ColaboradorMock } from \"../colaborador/colaborador\";\r\nimport { AreaAtuacaoEnum, AreaAtuacaoEnumMock } from \"../enum/area-atuacao.enum\";\r\nimport { SituacaoEnum, SituacaoEnumMock } from \"../enum/situacao.enum\";\r\nimport { IdentidadeVisual, IdentidadeVisualMock } from \"./identidade-visual\";\r\nimport { Endereco, EnderecoMock } from \"../endereco/endereco\";\r\nimport { Parceiro } from \"./parceiro\";\r\n\r\nexport interface Empresa {\r\n    id: number\r\n    razao_social: string\r\n    cnpj?: string\r\n    nome_fantasia?: string\r\n    fundado_em?: Date\r\n    area_atuacao?: AreaAtuacaoEnum\r\n    vende_alcool: boolean\r\n    licenca_venda_alcool?: File | HTMLImageElement | string\r\n    status_licenca: SituacaoEnum\r\n    identidade_visual?: IdentidadeVisual\r\n    funcionarios?: Colaborador[]\r\n    enderecos?: Endereco[]\r\n    parceiros?: Parceiro[]\r\n    \r\n    valido?: boolean\r\n}\r\n\r\nexport class EmpresaMock {\r\n    static lista: Empresa[];\r\n\r\n    public static getMock(): Empresa {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100),\r\n            razao_social: MockRandom.getUserName(),\r\n            cnpj: MockRandom.getInteger(1, 1000000) + '',\r\n            nome_fantasia: MockRandom.getUserName(),\r\n            fundado_em: MockRandom.getDatePast(),\r\n            area_atuacao: AreaAtuacaoEnumMock.getMock(),\r\n            vende_alcool: MockRandom.getBoolean(),\r\n            status_licenca: SituacaoEnumMock.getMock(),\r\n            identidade_visual: IdentidadeVisualMock.getMock(),\r\n            funcionarios: ColaboradorMock.getMockArray(10),\r\n            enderecos: EnderecoMock.getMockArray(3),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockBySituacao(situacao: SituacaoEnum): Empresa {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100),\r\n            razao_social: MockRandom.getUserName(),\r\n            cnpj: MockRandom.getInteger(1, 1000000) + '',\r\n            nome_fantasia: MockRandom.getUserName(),\r\n            fundado_em: MockRandom.getDatePast(),\r\n            area_atuacao: AreaAtuacaoEnumMock.getMock(),\r\n            vende_alcool: MockRandom.getBoolean(),\r\n            status_licenca: situacao,\r\n            identidade_visual: IdentidadeVisualMock.getMock(),\r\n            funcionarios: ColaboradorMock.getMockArray(10),\r\n            enderecos: EnderecoMock.getMockArray(3),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockByArea(area: AreaAtuacaoEnum): Empresa {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100),\r\n            razao_social: MockRandom.getUserName(),\r\n            cnpj: MockRandom.getInteger(1, 1000000) + '',\r\n            nome_fantasia: MockRandom.getUserName(),\r\n            fundado_em: MockRandom.getDatePast(),\r\n            area_atuacao: area,\r\n            vende_alcool: MockRandom.getBoolean(),\r\n            status_licenca: SituacaoEnumMock.getMock(),\r\n            identidade_visual: IdentidadeVisualMock.getMock(),\r\n            funcionarios: ColaboradorMock.getMockArray(10),\r\n            enderecos: EnderecoMock.getMockArray(3),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Empresa[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(EmpresaMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n\r\n    public static getMockArrayByArea(quantidade : number, area: AreaAtuacaoEnum) : Empresa[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(EmpresaMock.getMockByArea(area));\r\n          }\r\n        return this.lista;\r\n    }\r\n\r\n    public static getMockArrayBySituacao(quantidade : number, situacao: SituacaoEnum) : Empresa[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(EmpresaMock.getMockBySituacao(situacao));\r\n          }\r\n        return this.lista;\r\n    }\r\n\r\n    \r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Imagem, ImagemMock } from \"../imagem\";\r\nimport { Paleta, PaletaMock } from \"./paleta\";\r\n\r\nexport interface IdentidadeVisual {\r\n    id: number\r\n    logo_fundo_claro: Imagem,\r\n    logo_fundo_escuro: Imagem,\r\n    paleta: Paleta,\r\n    imagens: Imagem[]\r\n\r\n    valido?: boolean\r\n}\r\n\r\nexport class IdentidadeVisualMock {\r\n    static lista: IdentidadeVisual[];\r\n\r\n    public static getMock(): IdentidadeVisual {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100),\r\n            logo_fundo_claro: ImagemMock.getMock(),\r\n            logo_fundo_escuro: ImagemMock.getMock(),\r\n            paleta: PaletaMock.getMock(),\r\n            imagens: ImagemMock.getMockArray(10),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : IdentidadeVisual[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(IdentidadeVisualMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Colaborador, ColaboradorMock } from \"../colaborador/colaborador\";\r\nimport { AreaAtuacaoEnum, AreaAtuacaoEnumMock } from \"../enum/area-atuacao.enum\";\r\nimport { SituacaoEnum, SituacaoEnumMock } from \"../enum/situacao.enum\";\r\nimport { Imagem } from \"../imagem\";\r\n\r\nexport interface Paleta {\r\n    id: number\r\n    cor_principal: string\r\n    cor_secundaria: string\r\n    cor_texto: string\r\n    cor_background: string\r\n    cor_realce: string\r\n}\r\n\r\nexport class PaletaMock {\r\n    static lista: Paleta[];\r\n\r\n    public static getMock(): Paleta {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100),\r\n            cor_principal: MockRandom.getColor(),\r\n            cor_secundaria: MockRandom.getColor(),\r\n            cor_texto: MockRandom.getColor(),\r\n            cor_background: MockRandom.getColor(),\r\n            cor_realce: MockRandom.getColor()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Paleta[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(PaletaMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { AreaAtuacaoEnum, AreaAtuacaoEnumMock } from \"../enum/area-atuacao.enum\";\r\nimport { TipoPessoaEnum, TipoPessoaEnumMock } from \"../enum/tipo-pessoa.enum\";\r\nimport { Login, LoginMock } from \"../usuario/login\";\r\n\r\nexport interface Parceiro {\r\n    id: string\r\n    tipo_pessoa: TipoPessoaEnum\r\n    documento?: string //cnpj se pessoa juridica e cpf se pessoa fisica\r\n    razao_social?: string\r\n    nome: string //nome-fantasia se pessoa juridica\r\n    nascimento?: Date //fundado em em caso de pessoa juridica\r\n    login: Login\r\n    area_atuacao?: AreaAtuacaoEnum,\r\n    imagem_principal: string // decidir o tipo depois\r\n    //imagens?: Imagem[] // decidir se vou colocar depois\r\n    \r\n    valido?: boolean\r\n}\r\n\r\nexport class ParceiroMock {\r\n    static lista: Parceiro[];\r\n\r\n    public static getMock(): Parceiro {\r\n        let quantidade_var = MockRandom.getInteger(1,10)\r\n        return {\r\n            id: MockRandom.getInteger(1, 100) + '',\r\n            tipo_pessoa: TipoPessoaEnumMock.getMock(),\r\n            documento: MockRandom.getInteger(100, 999) + '.' + MockRandom.getInteger(100, 999) + '.' + MockRandom.getInteger(100, 999) + '-' + MockRandom.getInteger(10, 99),\r\n            razao_social: MockRandom.getUserName(),\r\n            nome: MockRandom.getUserName(),\r\n            nascimento: MockRandom.getDatePast(),\r\n            login: LoginMock.getMock(),\r\n            area_atuacao: AreaAtuacaoEnumMock.getMock(),\r\n            imagem_principal: quantidade_var + '.jpg'\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Parceiro[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(ParceiroMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","import { EstadoService } from \"app/utils/estado.list\";\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\n\r\nexport interface Endereco {\r\n    id?: string,\r\n    nome?: string,\r\n    cep: string,\r\n    state: string,\r\n    city: string,\r\n    street: string,\r\n    neighborhood: string,\r\n    service?: string\r\n    numero?: number\r\n    complemento?: string\r\n    e_principal?: boolean\r\n    link_maps?: string\r\n    //mapa do local numa proxima versao\r\n    valido?: boolean\r\n}\r\n\r\nexport class EnderecoClass implements Endereco {\r\n    \r\n    cep:  string;\r\n    state: string;\r\n    city: string;\r\n    street: string;\r\n    neighborhood: string;\r\n\r\n    constructor(cep:  string, state: string, city: string, street: string, neighborhood: string) {\r\n        this.cep = cep;\r\n        this.state = state;\r\n        this.city = city;\r\n        this.street = street;\r\n        this.neighborhood = neighborhood;\r\n    }\r\n}\r\n\r\nexport class EnderecoMock {\r\n    static lista: Endereco[];\r\n\r\n    public static getMock(): Endereco {\r\n        return {\r\n            id: MockRandom.getInteger(1,9999) + '',\r\n            nome: MockRandom.getName(),\r\n            cep:  MockRandom.getInteger(10, 99) + '.' + MockRandom.getInteger(100, 999) + '-' + MockRandom.getInteger(100, 999),\r\n            numero: MockRandom.getInteger(1, 999),\r\n            state: EstadoService.getMock().nome,\r\n            city: MockRandom.getName(),\r\n            street: MockRandom.getName(),\r\n            e_principal: MockRandom.getBoolean(),\r\n            neighborhood: MockRandom.getName()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Endereco[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(EnderecoMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","export enum AreaAtuacaoEnum {\r\n    show = 'Show',\r\n    balada = 'Balada',\r\n    aniversario15 = 'Aniversário de 15 anos',\r\n    aniversario = 'Aniversário',\r\n    palestra = 'Palestra',\r\n    aula = 'Aula',\r\n    teatro = 'Teatro',\r\n    cinema = 'Cinema',\r\n    standup = 'Standup',\r\n    projeto = 'Projeto',\r\n    fornecedor = 'Fornecedor'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class AreaAtuacaoEnumMock {\r\n    public static getMock(): AreaAtuacaoEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getMockArray(): AreaAtuacaoEnum[] {\r\n        return AreaAtuacaoEnumMock.getLista();\r\n    }\r\n\r\n    public static getLista(): AreaAtuacaoEnum[] {\r\n        return [AreaAtuacaoEnum.show, \r\n            AreaAtuacaoEnum.balada, \r\n            AreaAtuacaoEnum.aniversario15, \r\n            AreaAtuacaoEnum.aniversario, \r\n            AreaAtuacaoEnum.palestra,\r\n            AreaAtuacaoEnum.aula,\r\n            AreaAtuacaoEnum.teatro,\r\n            AreaAtuacaoEnum.cinema,\r\n            AreaAtuacaoEnum.standup,\r\n            AreaAtuacaoEnum.projeto,\r\n            AreaAtuacaoEnum.fornecedor\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum SituacaoEstoqueEnum {\r\n    em_estoque = 'Em estoque',\r\n    baixo_estoque = 'Baixo Estoque',\r\n    fora_estoque = 'Fora de Estoque'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class SituacaoEstoqueEnumMock {\r\n    public static getMock(): SituacaoEstoqueEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getMockArray(): SituacaoEstoqueEnum[] {\r\n        return this.getLista();\r\n    }\r\n\r\n    public static getLista(): SituacaoEstoqueEnum[] {\r\n        return [SituacaoEstoqueEnum.em_estoque, \r\n            SituacaoEstoqueEnum.baixo_estoque,\r\n            SituacaoEstoqueEnum.fora_estoque\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum SituacaoEnum {\r\n    nao_iniciado = 'Não Iniciado',\r\n    em_analise = 'Em análise',\r\n    processando = 'Processando',\r\n    pendente = 'Pendente',\r\n    aprovado = 'Aprovado',\r\n    reprovado = 'Reprovado'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class SituacaoEnumMock {\r\n    public static getMock(): SituacaoEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getMockArray(): SituacaoEnum[] {\r\n        return SituacaoEnumMock.getLista();\r\n    }\r\n\r\n    public static getLista(): SituacaoEnum[] {\r\n        return [SituacaoEnum.nao_iniciado,\r\n            SituacaoEnum.em_analise, \r\n            SituacaoEnum.processando, \r\n            SituacaoEnum.pendente, \r\n            SituacaoEnum.aprovado, \r\n            SituacaoEnum.reprovado\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum TipoImagemEnum {\r\n    logo = 'Logo Principal',\r\n    logo_fundo_escuro = 'Logo para Fundo Escuro',\r\n    logo_fundo_claro = 'Logo para Fundo Claro',\r\n    banner = 'Banner',\r\n    instagram = 'Instagram',\r\n    perfil = 'Perfil',\r\n    produto = 'Produto'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class TipoImagemEnumMock {\r\n    public static getMock(): TipoImagemEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getMockArray(): TipoImagemEnum[] {\r\n        return TipoImagemEnumMock.getLista();\r\n    }\r\n\r\n    public static getLista(): TipoImagemEnum[] {\r\n        return [TipoImagemEnum.logo, \r\n            TipoImagemEnum.logo_fundo_escuro, \r\n            TipoImagemEnum.logo_fundo_claro, \r\n            TipoImagemEnum.banner, \r\n            TipoImagemEnum.instagram,\r\n            TipoImagemEnum.perfil,\r\n            TipoImagemEnum.produto\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum TipoIngressoEnum {\r\n    normal = 'Normal',\r\n    meia = 'Meia',\r\n    solidaria = 'Solidária',\r\n    vip = 'VIP',\r\n    gratuito = 'Gratuito'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class TipoIngressoEnumMock {\r\n    public static getMock(): TipoIngressoEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getMockArray(): TipoIngressoEnum[] {\r\n        return TipoIngressoEnumMock.getLista();\r\n    }\r\n\r\n    public static getLista(): TipoIngressoEnum[] {\r\n        return [TipoIngressoEnum.normal, \r\n            TipoIngressoEnum.meia,\r\n            TipoIngressoEnum.solidaria,\r\n            TipoIngressoEnum.vip,\r\n            TipoIngressoEnum.gratuito\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum TipoMedidaEnum {\r\n    bebida = 'Bebida', // fazer isso depois para medidas de bebida e de comida\r\n    comida = 'Comida',\r\n    brinde = 'Brinde',\r\n    outro = 'Outro'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class TipoMedidaEnumMock {\r\n    public static getMock(): TipoMedidaEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];//TipoMedidaEnumMock.lista[2];\r\n    }\r\n\r\n    public static getMockArray(): TipoMedidaEnum[] {\r\n        return this.getLista();\r\n    }\r\n\r\n    public static getLista(): TipoMedidaEnum[] {\r\n        return [TipoMedidaEnum.bebida, \r\n            TipoMedidaEnum.comida,\r\n            TipoMedidaEnum.brinde,\r\n            TipoMedidaEnum.outro\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum TipoPermissaoEnum {\r\n    administrativo = 'Administrativo',\r\n    venda = 'Venda',\r\n    cadastro = 'Cadastro',\r\n    cancelamento = 'Cancelamento',\r\n    exclusao = 'Exclusão',\r\n    rh = 'Recursos Humanos',\r\n    ingressos = 'Ingressos',\r\n    eventos = 'Eventos',\r\n    musical = 'Musical',\r\n    influencer = 'Influencer'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class TipoPermissaoEnumMock {\r\n    public static getMock(): TipoPermissaoEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getMockArray(): TipoPermissaoEnum[] {\r\n        return TipoPermissaoEnumMock.getLista();\r\n    }\r\n\r\n    public static getLista(): TipoPermissaoEnum[] {\r\n        return [TipoPermissaoEnum.administrativo, \r\n            TipoPermissaoEnum.venda, \r\n            TipoPermissaoEnum.cadastro, \r\n            TipoPermissaoEnum.cancelamento, \r\n            TipoPermissaoEnum.exclusao,\r\n            TipoPermissaoEnum.rh,\r\n            TipoPermissaoEnum.ingressos,\r\n            TipoPermissaoEnum.eventos,\r\n            TipoPermissaoEnum.musical,\r\n            TipoPermissaoEnum.influencer\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum TipoPessoaEnum {\r\n    fisica = 'Física',\r\n    juridica = 'Jurídica'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class TipoPessoaEnumMock {\r\n    public static getMock(): TipoPessoaEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getMockArray(): TipoPessoaEnum[] {\r\n        return TipoPessoaEnumMock.getLista();\r\n    }\r\n\r\n    public static getLista(): TipoPessoaEnum[] {\r\n        return [TipoPessoaEnum.fisica, \r\n            TipoPessoaEnum.juridica\r\n         ];\r\n    }\r\n                \r\n}\r\n","export enum TipoProdutoEnum {\r\n    bebida = 'Bebida',\r\n    comida = 'Comida',\r\n    brinde = 'Brinde',\r\n    outro = 'Outro'\r\n}\r\n  \r\n\r\nvar randomExt = require(\"random-ext\");\r\nexport class TipoProdutoEnumMock {\r\n    public static getMock(): TipoProdutoEnum {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];//TipoProdutoEnumMock.lista[2];\r\n    }\r\n\r\n    public static getMockArray(): TipoProdutoEnum[] {\r\n        return this.getLista();\r\n    }\r\n\r\n    public static getLista(): TipoProdutoEnum[] {\r\n        return [TipoProdutoEnum.bebida, \r\n            TipoProdutoEnum.comida,\r\n            TipoProdutoEnum.brinde,\r\n            TipoProdutoEnum.outro\r\n         ];\r\n    }\r\n                \r\n}\r\n","\r\nimport { MockRandom } from \"../utils/mock-random\";\r\nimport { TipoImagemEnum, TipoImagemEnumMock } from \"./enum/tipo-imagem.enum\";\r\n\r\nexport interface Imagem {\r\n    id: number;\r\n    tipo: TipoImagemEnum;  \r\n    is_principal: boolean;\r\n    largura?: number;\r\n    altura?: number;\r\n    nome: string\r\n    descricao?: string;\r\n    foto: File | HTMLImageElement | string;\r\n}\r\n\r\nexport class ImagemMock {\r\n    static lista: Imagem[];\r\n\r\n    public static getMock(): Imagem {\r\n        return {\r\n            id: MockRandom.getInteger(1, 99),\r\n            tipo: TipoImagemEnumMock.getMock(),  \r\n            is_principal: MockRandom.getBoolean(),\r\n            largura: MockRandom.getFloat(1, 99),\r\n            altura: MockRandom.getFloat(1, 99),\r\n            nome: MockRandom.getName(),\r\n            descricao: MockRandom.getSentence(),\r\n            foto: MockRandom.getString(),\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Imagem[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(ImagemMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { TipoIngressoEnum, TipoIngressoEnumMock } from \"../enum/tipo-ingresso.enum\";\r\nimport { Regra, RegraMock } from \"../regra\";\r\n\r\nexport interface Ingresso {\r\n    id: number\r\n    tipo: TipoIngressoEnum\r\n    nome: string\r\n    descricao?: string\r\n    quantidade?: number\r\n    valor?: number\r\n    regras: Regra[]\r\n    \r\n    valido?: boolean\r\n}\r\n\r\nexport class IngressoMock {\r\n    static lista: Ingresso[];\r\n\r\n    public static getMock(): Ingresso {\r\n        return {\r\n            id: MockRandom.getInteger(1, 100),\r\n            tipo: TipoIngressoEnumMock.getMock(),\r\n            nome: MockRandom.getUserName(),\r\n            descricao: MockRandom.getWord(10),\r\n            quantidade: MockRandom.getInteger(1,10),\r\n            valor: MockRandom.getFloat(1,10),\r\n            regras: RegraMock.getMockArray(2),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Ingresso[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(IngressoMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Produto, ProdutoMock } from \"./produto\";\r\nimport { Restricoes, RestricoesMock } from \"./restricoes\";\r\n\r\nexport interface Bebida {\r\n    produto: Produto\r\n    ml: number\r\n    e_alcoolico: boolean\r\n    teor_alcoolico: number\r\n    restricoes: Restricoes\r\n    \r\n    valido?: boolean\r\n}\r\n\r\nexport class BebidaMock {\r\n    static lista: Bebida[];\r\n\r\n    public static getMock(): Bebida {\r\n        return {\r\n            produto: ProdutoMock.getMock(),\r\n            ml: MockRandom.getInteger(1,100),\r\n            e_alcoolico: MockRandom.getBoolean(),\r\n            teor_alcoolico: MockRandom.getFloat(0.1, 100),\r\n            restricoes: RestricoesMock.getMock(),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Bebida[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(BebidaMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Produto, ProdutoMock } from \"./produto\";\r\n\r\nexport interface Brinde {\r\n    produto: Produto\r\n    e_gratis: boolean\r\n    como_conseguir: string\r\n    \r\n    valido?: boolean\r\n}\r\n\r\nexport class BrindeMock {\r\n    static lista: Brinde[];\r\n\r\n    public static getMock(): Brinde {\r\n        return {\r\n            produto: ProdutoMock.getMock(),\r\n            e_gratis: MockRandom.getBoolean(),\r\n            como_conseguir: MockRandom.getSentence(),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Brinde[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(BrindeMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Produto, ProdutoMock } from \"./produto\";\r\nimport { Restricoes, RestricoesMock } from \"./restricoes\";\r\n\r\nexport interface Comida {\r\n    produto: Produto\r\n    g: number\r\n    restricoes: Restricoes\r\n    \r\n    valido?: boolean\r\n}\r\n\r\nexport class ComidaMock {\r\n    static lista: Comida[];\r\n\r\n    public static getMock(): Comida {\r\n        return {\r\n            produto: ProdutoMock.getMock(),\r\n            g: MockRandom.getInteger(1,100),\r\n            restricoes: RestricoesMock.getMock(),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Comida[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(ComidaMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Imagem, ImagemMock } from \"../imagem\";\r\nimport { TipoProdutoEnum, TipoProdutoEnumMock } from \"../enum/tipo-produto.enum\";\r\nimport { TipoMedidaEnum, TipoMedidaEnumMock } from \"../enum/tipo-medida.enum\";\r\n\r\nexport interface Produto {\r\n    id: string //decidir depois se vai virar number\r\n    tipo: TipoProdutoEnum\r\n    nome: string\r\n    descricao?: string\r\n    quantidade: number //g se for comida e ml se for bebida e etc... usar as medidas equivalentes\r\n    medida: TipoMedidaEnum\r\n    imagens?: Imagem[]\r\n    imagem_principal?: string //decidir se fica depois\r\n    possui_processo_de_preparo?: boolean //refernte a pedido\r\n    \r\n    valido?: boolean\r\n}\r\n\r\nexport class ProdutoMock {\r\n    static lista: Produto[];\r\n\r\n    public static getMock(): Produto {\r\n        let quantidade_var = MockRandom.getInteger(1,10)\r\n        return {\r\n             id: MockRandom.getInteger(1, 100) + '',\r\n             tipo: TipoProdutoEnumMock.getMock(),\r\n             nome: MockRandom.getUserName(),\r\n             descricao: MockRandom.getWord(10),\r\n             quantidade: quantidade_var,\r\n             medida: TipoMedidaEnumMock.getMock(),\r\n             imagem_principal: quantidade_var + '.jpg',\r\n             valido: MockRandom.getBoolean(),\r\n        };\r\n    }\r\n\r\n    public static getMockByTipo(tipo: TipoProdutoEnum): Produto {\r\n        let quantidade_var = MockRandom.getInteger(1,10)\r\n        return {\r\n             id: MockRandom.getInteger(1, 100) + '',\r\n             tipo: tipo,\r\n             nome: MockRandom.getUserName(),\r\n             descricao: MockRandom.getWord(10),\r\n             quantidade: quantidade_var,\r\n             medida: TipoMedidaEnumMock.getMock(),\r\n             imagem_principal: quantidade_var + '.jpg',\r\n             valido: MockRandom.getBoolean(),\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Produto[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(ProdutoMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n\r\n    public static getMockArrayByTipo(quantidade : number, tipo: TipoProdutoEnum) : Produto[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(ProdutoMock.getMockByTipo(tipo));\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\n\r\nexport interface Restricoes {\r\n    e_apimentado: boolean\r\n    e_vegano: boolean\r\n    possui_lactose: boolean\r\n    possui_açucar: boolean\r\n    possui_glutem: boolean\r\n}\r\n\r\nexport class RestricoesMock {\r\n    static lista: Restricoes[];\r\n\r\n    public static getMock(): Restricoes {\r\n        return {\r\n            e_apimentado: MockRandom.getBoolean(),\r\n            e_vegano: MockRandom.getBoolean(),\r\n            possui_lactose: MockRandom.getBoolean(),\r\n            possui_açucar: MockRandom.getBoolean(),\r\n            possui_glutem: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Restricoes[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(RestricoesMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"../utils/mock-random\";\r\n\r\nexport interface Regra {\r\n    id: number;\r\n    nome: string\r\n    descricao?: string;\r\n}\r\n\r\nexport class RegraMock {\r\n    static lista: Regra[];\r\n\r\n    public static getMock(): Regra {\r\n        return {\r\n            id: MockRandom.getInteger(1, 99),\r\n            nome: MockRandom.getName(),\r\n            descricao: MockRandom.getSentence()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Regra[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(RegraMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"../../utils/mock-random\";\r\n\r\nexport interface Login {\r\n    username: string\r\n    email: string\r\n    senha: string\r\n    valido?: boolean\r\n}\r\n\r\nexport class LoginMock {\r\n    static lista: Login[];\r\n\r\n    public static getMock(): Login {\r\n        return {\r\n            username: MockRandom.getUserName(),\r\n            email: MockRandom.getEmail(),\r\n            senha: MockRandom.getPassword(10),\r\n            valido: MockRandom.getBoolean()\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Login[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(LoginMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","\r\nimport { MockRandom } from \"app/utils/mock-random\";\r\nimport { Login, LoginMock } from \"./login\";\r\n\r\nexport interface Usuario {\r\n    id: string;\r\n    login: Login\r\n    nome: string\r\n    apelido?: string\r\n    cpf?: string\r\n    nascimento: Date\r\n    imagem: string\r\n}\r\n\r\nexport class UsuarioMock {\r\n    static lista: Usuario[];\r\n\r\n    public static getMock(): Usuario {\r\n        let quantidade_var = MockRandom.getInteger(1,10)\r\n        return {\r\n            id: MockRandom.getInteger(1, 100) + '',\r\n            login: LoginMock.getMock(),\r\n            nome: MockRandom.getUserName(),\r\n            apelido: MockRandom.getUserName(),\r\n            cpf: MockRandom.getInteger(100, 999) + '.' + MockRandom.getInteger(100, 999) + '.' + MockRandom.getInteger(100, 999) + '-' + MockRandom.getInteger(10, 99),\r\n            nascimento: MockRandom.getDatePast(),\r\n            imagem: quantidade_var + '.jpg'\r\n        };\r\n    }\r\n\r\n    public static getMockArray(quantidade : number) : Usuario[]{\r\n        this.lista = [];\r\n        for (let i = 0; i < quantidade; i++) {\r\n            this.lista.push(UsuarioMock.getMock());\r\n          }\r\n        return this.lista;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MenuService } from 'app/utils/menu.list';\r\nimport { ConfirmationService, MenuItem, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-cadastro',\r\n  templateUrl: './cadastro.component.html',\r\n  styleUrls: ['./cadastro.component.scss']\r\n})\r\nexport class CadastroComponent {\r\n  name = 'Jane';\r\n  teste = undefined;\r\n  valid = false;\r\n\r\n  items: MenuItem[] | undefined;\r\n  items2: MenuItem[] | undefined;\r\n  position: string = 'top';\r\n  positionOptions: any\r\n\r\n  home: MenuItem | undefined;\r\n\r\n  statuses!: any[];\r\n  responsiveOptions;\r\n\r\n  constructor(private messageService: MessageService, private confirmationService: ConfirmationService) { \r\n    this.responsiveOptions = MenuService.getResponsiveOptions();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.items = [{ label: 'Cadastro' }];\r\n\r\n    this.home = { icon: 'pi pi-home', routerLink: '/' };\r\n\r\n    this.items2 = MenuService.getItemsMenuCadastro();\r\n    this.positionOptions = MenuService.getPositionOptions();\r\n\r\n    \r\n    \r\n  }\r\n\r\n  abrirLink(url: string) {\r\n    window.open(url, '_self');\r\n  }\r\n  \r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-1\" style=\"position: static;\">\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <div class=\"card flex justify-content-center\">\r\n            <p-breadcrumb class=\"max-w-full\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n        </div>\r\n        <p-card header=\"Cadastro\">\r\n            <p-carousel [value]=\"items2\" [numVisible]=\"5\" [numScroll]=\"5\" [circular]=\"false\" [responsiveOptions]=\"responsiveOptions\" [autoplayInterval]=\"3000\">\r\n                <ng-template let-pagina pTemplate=\"item\">\r\n                    <div class=\"pagina-item\" (click)=\"abrirLink(pagina.url)\">\r\n                        <div class=\"pagina-item-content\">\r\n                            <div class=\"mb-3\">\r\n                                <img src=\"{{pagina.icon}}\" [alt]=\"pagina.name\" class=\"pagina-image\" />\r\n                            </div>\r\n                            <div>\r\n                                <h4 class=\"mb-1\">{{pagina.label}}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n            </p-carousel>\r\n\r\n            \r\n        </p-card>\r\n\r\n    </div>\r\n    <div class=\"col-md-1\"></div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { Colaborador } from 'app/models/colaborador/colaborador';\r\nimport { TipoPermissaoEnum, TipoPermissaoEnumMock } from 'app/models/enum/tipo-permissao.enum';\r\nimport { ColaboradorService } from 'app/services/colaborador.service';\r\nimport { GeralUtil } from 'app/utils/geral.util';\r\nimport { ConfirmationService, MenuItem, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-colaborador',\r\n  templateUrl: './colaborador.component.html',\r\n  styleUrls: ['./colaborador.component.scss']\r\n})\r\nexport class ColaboradorComponent {\r\n  items: MenuItem[] | undefined;\r\n  home: MenuItem | undefined;\r\n\r\n  colaboradorDialog: boolean = false;\r\n  lista!: Colaborador[];\r\n  item!: Colaborador;\r\n  selecteds!: Colaborador[] | null;\r\n\r\n  submitted: boolean = false;\r\n\r\n  permissoes: TipoPermissaoEnum[] = TipoPermissaoEnumMock.getMockArray();\r\n\r\n  constructor(private service: ColaboradorService, private messageService: MessageService, private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.items = [{ label: 'Cadastro', url: './cadastro', target: '_self'}, { label: 'Colaborador' }];\r\n\r\n    this.home = { icon: 'pi pi-home', routerLink: '/' };\r\n\r\n    this.getAll();\r\n  }\r\n\r\n  openNew() {\r\n    this.submitted = false;\r\n    this.colaboradorDialog = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.service.getAllColaboradors().subscribe(\r\n      data => {\r\n        this.lista = data\r\n      },\r\n      error => {\r\n        // Handle the error in case of failure\r\n        console.error('Error fetching states:', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteSelecteds() {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar selecionados?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => !this.selecteds?.includes(val));\r\n        this.selecteds = null;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item(ns) Deletado(s)', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(item: Colaborador) {\r\n    this.item = { ...item };\r\n    //fazer o check nos itens existentes no enum do item\r\n    this.colaboradorDialog = true;\r\n  }\r\n\r\n  delete(item: Colaborador) {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar ' + item.usuario.nome + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => val.id !== item.id);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Deletado', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.colaboradorDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n\r\n    if (this.item.usuario.nome?.trim()) {\r\n      if (this.item.id) {\r\n        this.lista[this.findIndexById(this.item.id)] = this.item;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Atualizado', life: 3000 });\r\n      } else {\r\n        this.item.id = GeralUtil.createId();\r\n        this.lista.push(this.item);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Criado', life: 3000 });\r\n      }\r\n\r\n      this.lista = [...this.lista];\r\n      this.colaboradorDialog = false;\r\n    }\r\n  }\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.lista.length; i++) {\r\n      if (this.lista[i].id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-1\" style=\"position: static;\">\r\n        <app-menu-lateral></app-menu-lateral>\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <div class=\"card flex justify-content-center\">\r\n            <p-breadcrumb class=\"max-w-full\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n        </div>\r\n        <p-card header=\"Gerenciamento de Colaboradores/Funcionários\">\r\n            \r\n                <!-- tabelinha a seguir -->\r\n\r\n                <div class=\"card\">\r\n                    <p-toast></p-toast>\r\n                    <p-table\r\n                        #dt\r\n                        [value]=\"lista\"\r\n                        [rows]=\"10\"\r\n                        [paginator]=\"true\"\r\n                        [globalFilterFields]=\"['login', 'usuario.nome', 'usuario.apelido', 'usuario.cpf', 'usuario.nascimento']\"\r\n                        [tableStyle]=\"{ 'min-width': '75rem' }\"\r\n                        [(selection)]=\"selecteds\"\r\n                        [rowHover]=\"true\"\r\n                        dataKey=\"id\"\r\n                        currentPageReportTemplate=\"{first} à {last} de {totalRecords}\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                    >\r\n                        <ng-template pTemplate=\"caption\">\r\n                                <p-toolbar>\r\n                                    <ng-template pTemplate=\"left\">\r\n                                        <button pButton pRipple label=\"\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" (click)=\"openNew()\"></button>\r\n                                        <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger mr-2\" (click)=\"deleteSelecteds()\" [disabled]=\"!selecteds || !selecteds.length\"></button>\r\n                                        <span class=\"p-input-icon-left\">\r\n                                            <i class=\"pi pi-search\"></i>\r\n                                            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Pesquisar...\" />\r\n                                        </span>\r\n                                    </ng-template>\r\n                            \r\n                                    <ng-template pTemplate=\"right\">\r\n                                        <p-fileUpload mode=\"basic\" accept=\"image/*\" [maxFileSize]=\"1000000\" label=\"Importar\" chooseLabel=\"Import\" class=\"mr-2 inline-block\"></p-fileUpload>\r\n                                        <button pButton pRipple label=\"Exportar\" icon=\"pi pi-upload\" class=\"p-button-help\"></button>\r\n                                    </ng-template>\r\n                                </p-toolbar>\r\n                            \r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th style=\"width: 4rem\">\r\n                                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                                </th>\r\n                                <th>Imagem</th>\r\n                                <th pSortableColumn=\"usuario.login\">Login <p-sortIcon field=\"login\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"usuario.nome\">Nome <p-sortIcon field=\"usuario.nome\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"usuario.apelido\">Apelido <p-sortIcon field=\"usuario.apelido\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"usuario.cpf\">CPF <p-sortIcon field=\"usuario.cpf\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"usuario.nascimento\">Nascimento <p-sortIcon field=\"usuario.nascimento\"></p-sortIcon></th>\r\n                                \r\n                                <th style=\"width: 8rem\"></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-item>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-tableCheckbox [value]=\"item\"></p-tableCheckbox>\r\n                                </td>\r\n                                <td><img [src]=\"'./assets/images/mock/' + item.usuario.imagem\" [alt]=\"item.usuario.nome\" width=\"50\" class=\"shadow-4\" /></td>\r\n                                <td>{{ item.usuario.login.email }}</td>\r\n                                <td>{{ item.usuario.nome }}</td>\r\n                                <td>{{ item.usuario.apelido }}</td>\r\n                                <td>{{ item.usuario.cpf }}</td>\r\n                                <td>{{ item.usuario.nascimento | date:'dd/MM/yyyy'}}</td>\r\n                                <td>\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" (click)=\"edit(item)\"></button>\r\n                                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" (click)=\"delete(item)\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"flex align-items-center justify-content-between\">Total: {{ lista ? lista.length : 0 }}</div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n                <p-dialog [(visible)]=\"colaboradorDialog\" [style]=\"{ width: '40%' }\" header=\"Detalhes do Colaborador\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n                    <ng-template pTemplate=\"content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-5\">\r\n                                <img [src]=\"'./assets/images/mock/' + item.usuario.imagem\" [alt]=\"item.usuario.imagem\" class=\"block m-auto pb-3\" *ngIf=\"item.usuario.imagem\" />\r\n                                \r\n                            </div>\r\n                            <div class=\"col-7\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"nome\">Nome:</label>\r\n                                    <input type=\"text\" pInputText id=\"nome\" [(ngModel)]=\"item.usuario.nome\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.usuario.nome\">Name is required.</small>\r\n                                </div>\r\n                                <div class=\"field\">\r\n                                    <label for=\"nascimento\">Nascimento?:</label>\r\n                                    <p-calendar [(ngModel)]=\"item.usuario.nascimento\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n                                </div>\r\n                                <div class=\"field\">\r\n                                    <label for=\"cpf\">CPF?:</label>\r\n                                    <input type=\"text\" pInputText id=\"cpf\" [(ngModel)]=\"item.usuario.cpf\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.usuario.cpf\">Apelido is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"permissoes\">Permissôes:</label>\r\n                                    <p-multiSelect [options]=\"permissoes\" [(ngModel)]=\"item.permissoes\" itemSize=\"200\"></p-multiSelect>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"apelido\">Apelido:</label>\r\n                                    <input type=\"text\" pInputText id=\"apelido\" [(ngModel)]=\"item.usuario.apelido\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.usuario.apelido\">Apelido is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"login.email\">E-mail:</label>\r\n                                    <input type=\"text\" pInputText id=\"login.email\" [(ngModel)]=\"item.usuario.login.email\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.usuario.login.email\">Apelido is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"login.email\">Username:</label>\r\n                                    <input type=\"text\" pInputText id=\"login.username\" [(ngModel)]=\"item.usuario.login.username\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.usuario.login.username\">Apelido is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-12\"><h2 style=\"min-height: 70px;\"></h2></div>\r\n                        </div>\r\n                        \r\n                    </ng-template>\r\n                \r\n                    <ng-template pTemplate=\"footer\">\r\n                        <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\r\n                        <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"save()\"></button>\r\n                    </ng-template>\r\n                </p-dialog>\r\n                \r\n                <p-confirmDialog [style]=\"{ width: '40%'}\"></p-confirmDialog>\r\n\r\n            \r\n        </p-card>\r\n\r\n    </div>\r\n    <div class=\"col-md-1\"></div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { Endereco } from 'app/models/endereco/endereco';\r\nimport { Estado } from 'app/models/endereco/estado';\r\nimport { Erro } from 'app/models/erro/erro';\r\nimport { EnderecoService } from 'app/services/endereco.service';\r\nimport { EstadoService } from 'app/utils/estado.list';\r\nimport { GeralUtil } from 'app/utils/geral.util';\r\nimport { ConfirmationService, MenuItem, MessageService } from 'primeng/api';\r\nconst cidades = require('cidades-promise'); //https://www.npmjs.com/package/cidades-promise\r\n\r\n@Component({\r\n  selector: 'app-endereco',\r\n  templateUrl: './endereco.component.html',\r\n  styleUrls: ['./endereco.component.scss']\r\n})\r\nexport class EnderecoComponent {\r\n  items: MenuItem[] | undefined;\r\n  home: MenuItem | undefined;\r\n\r\n  productDialog: boolean = false;\r\n  lista!: Endereco[];\r\n  item!: Endereco;\r\n  selecteds!: Endereco[] | null;\r\n\r\n  submitted: boolean = false;\r\n\r\n  estados: Estado[] = EstadoService.getLista()\r\n  cidades: string[] = [];\r\n\r\n  constructor(private service: EnderecoService, private messageService: MessageService, private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.items = [{ label: 'Cadastro', url: './cadastro', target: '_self'}, { label: 'Endereco' }];\r\n    this.home = { icon: 'pi pi-home', routerLink: '/' };\r\n\r\n    this.getAll();\r\n    this.getCidades();\r\n  }\r\n\r\n  openNew() {\r\n    this.submitted = false;\r\n    this.productDialog = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.service.getAllEnderecos().subscribe(\r\n      data => {\r\n        this.lista = data\r\n      },\r\n      error => {\r\n        // Handle the error in case of failure\r\n        console.error('Error fetching states:', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  getCidades() {\r\n    cidades.getCitiesByState('ES')\r\n      .then((res: string[]) => {\r\n        this.cidades = res\r\n      })\r\n      .catch((erro: Erro) => {\r\n          window.alert(erro.erro)\r\n          return []\r\n      })\r\n  }\r\n\r\n  deleteSelecteds() {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar selecionados?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => !this.selecteds?.includes(val));\r\n        this.selecteds = null;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item(ns) Deletado(s)', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(product: Endereco) {\r\n    this.item = { ...product };\r\n    this.productDialog = true;\r\n  }\r\n\r\n  delete(item: Endereco) {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar ' + item.cep + ' - ' + item.numero + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => val.id !== item.id);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Deletado', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.productDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n\r\n    if (this.item.cep.trim()) {\r\n      if (this.item.id) {\r\n        this.lista[this.findIndexById(this.item.id)] = this.item;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Atualizado', life: 3000 });\r\n      } else {\r\n        this.item.id = GeralUtil.createId();\r\n        this.lista.push(this.item);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Criado', life: 3000 });\r\n      }\r\n\r\n      this.lista = [...this.lista];\r\n      this.productDialog = false;\r\n    }\r\n  }\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.lista.length; i++) {\r\n      if (this.lista[i].id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-1\" style=\"position: static;\">\r\n        <app-menu-lateral></app-menu-lateral>\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <div class=\"card flex justify-content-center\">\r\n            <p-breadcrumb class=\"max-w-full\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n        </div>\r\n        <p-card header=\"Gerenciamento de Endereços\">\r\n            \r\n                <!-- tabelinha a seguir -->\r\n\r\n                <div class=\"card\">\r\n                    <p-toast></p-toast>\r\n                    <p-table\r\n                        #dt\r\n                        [value]=\"lista\"\r\n                        [rows]=\"10\"\r\n                        [paginator]=\"true\"\r\n                        [globalFilterFields]=\"['nome', 'cep', 'numero', 'city', 'state']\"\r\n                        [tableStyle]=\"{ 'min-width': '75rem' }\"\r\n                        [(selection)]=\"selecteds\"\r\n                        [rowHover]=\"true\"\r\n                        dataKey=\"id\"\r\n                        currentPageReportTemplate=\"{first} à {last} de {totalRecords}\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                    >\r\n                        <ng-template pTemplate=\"caption\">\r\n                                <p-toolbar>\r\n                                    <ng-template pTemplate=\"left\">\r\n                                        <button pButton pRipple label=\"\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" (click)=\"openNew()\"></button>\r\n                                        <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger mr-2\" (click)=\"deleteSelecteds()\" [disabled]=\"!selecteds || !selecteds.length\"></button>\r\n                                        <span class=\"p-input-icon-left\">\r\n                                            <i class=\"pi pi-search\"></i>\r\n                                            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Pesquisar...\" />\r\n                                        </span>\r\n                                    </ng-template>\r\n                            \r\n                                    <ng-template pTemplate=\"right\">\r\n                                        <p-fileUpload mode=\"basic\" accept=\"image/*\" [maxFileSize]=\"1000000\" label=\"Importar\" chooseLabel=\"Import\" class=\"mr-2 inline-block\"></p-fileUpload>\r\n                                        <button pButton pRipple label=\"Exportar\" icon=\"pi pi-upload\" class=\"p-button-help\"></button>\r\n                                    </ng-template>\r\n                                </p-toolbar>\r\n                            \r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th style=\"width: 4rem\">\r\n                                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                                </th>\r\n                                <th pSortableColumn=\"nome\">Nome <p-sortIcon field=\"nome\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"cep\">CEP <p-sortIcon field=\"cep\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"numero\">Nº <p-sortIcon field=\"numero\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"city\">Cidade <p-sortIcon field=\"city\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"state\">Estado <p-sortIcon field=\"state\"></p-sortIcon></th>\r\n                                <th style=\"width: 8rem\"></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-item>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-tableCheckbox [value]=\"item\"></p-tableCheckbox>\r\n                                </td>\r\n                                <td>{{ item.nome }}</td>\r\n                                <td>{{ item.cep }}</td>\r\n                                <td>{{ item.numero }}</td>\r\n                                <td>{{ item.city }}</td>\r\n                                <td>{{ item.state }}</td>\r\n                                <td>\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" (click)=\"edit(item)\"></button>\r\n                                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" (click)=\"delete(item)\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"flex align-items-center justify-content-between\">Total: {{ lista ? lista.length : 0 }}</div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n                <p-dialog [(visible)]=\"productDialog\" [style]=\"{ width: '40%' }\" header=\"Detalhes do Endereço\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n                    <ng-template pTemplate=\"content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"nome\">Nome:</label>\r\n                                    <input type=\"text\" pInputText id=\"nome\" [(ngModel)]=\"item.nome\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.nome\">Name is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"cep\">CEP:</label>\r\n                                    <input type=\"text\" pInputText id=\"cep\" [(ngModel)]=\"item.cep\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.cep\">Name is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-3\">\r\n                                <!-- colocar o mapa aqui depois ? -->\r\n                                <div class=\"field\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <label for=\"e_principal\">É o principal? </label>\r\n                                        </div>\r\n                                        <div class=\"col-12\">\r\n                                            <p-inputSwitch [(ngModel)]=\"item.e_principal\" style=\"border-left: 100px;\"></p-inputSwitch>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-5\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"street\">Rua/Avenida:</label>\r\n                                    <input type=\"text\" pInputText id=\"street\" [(ngModel)]=\"item.street\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.street\">Name is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"numero\">Número:</label>\r\n                                    <p-inputNumber id=\"numero\" [(ngModel)]=\"item.numero\"></p-inputNumber>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-5\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"neighborhood\">Bairro:</label>\r\n                                    <input type=\"text\" pInputText id=\"neighborhood\" [(ngModel)]=\"item.neighborhood\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.neighborhood\">Name is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"numero\">Complemento:</label>\r\n                                    <textarea id=\"descricao\" pInputTextarea [(ngModel)]=\"item.descricao\" required rows=\"3\" cols=\"20\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"city\">Cidade:</label>\r\n                                    <p-dropdown [options]=\"cidades\" [(ngModel)]=\"item.city\"></p-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"state\">Estado:</label>\r\n                                    <p-dropdown [options]=\"estados\" [(ngModel)]=\"item.state\" optionLabel=\"nome\" optionValue=\"sigla\"></p-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"link_maps\">Link para maps:</label>\r\n                                    <input type=\"text\" pInputText id=\"link_maps\" [(ngModel)]=\"item.link_maps\" required autofocus />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </ng-template>\r\n                \r\n                    <ng-template pTemplate=\"footer\">\r\n                        <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\r\n                        <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"save()\"></button>\r\n                    </ng-template>\r\n                </p-dialog>\r\n                \r\n                <p-confirmDialog [style]=\"{ width: '40%' }\"></p-confirmDialog>\r\n\r\n            \r\n        </p-card>\r\n\r\n    </div>\r\n    <div class=\"col-md-1\"></div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { Parceiro } from 'app/models/empresa/parceiro';\r\nimport { AreaAtuacaoEnum, AreaAtuacaoEnumMock } from 'app/models/enum/area-atuacao.enum';\r\nimport { TipoPermissaoEnum, TipoPermissaoEnumMock } from 'app/models/enum/tipo-permissao.enum';\r\nimport { TipoPessoaEnum, TipoPessoaEnumMock } from 'app/models/enum/tipo-pessoa.enum';\r\nimport { EmpresaService } from 'app/services/empresa.service';\r\nimport { GeralUtil } from 'app/utils/geral.util';\r\nimport { ConfirmationService, MenuItem, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-parceiro',\r\n  templateUrl: './parceiro.component.html',\r\n  styleUrls: ['./parceiro.component.scss']\r\n})\r\nexport class ParceiroComponent {\r\n  items: MenuItem[] | undefined;\r\n  home: MenuItem | undefined;\r\n\r\n  parceiroDialog: boolean = false;\r\n  lista!: Parceiro[];\r\n  item!: Parceiro;\r\n  selecteds!: Parceiro[] | null;\r\n\r\n  submitted: boolean = false;\r\n\r\n  permissoes: TipoPermissaoEnum[] = TipoPermissaoEnumMock.getMockArray();\r\n  tipos_pessoas: TipoPessoaEnum[] = TipoPessoaEnumMock.getMockArray();\r\n  areas_atuacao: AreaAtuacaoEnum[] = AreaAtuacaoEnumMock.getMockArray();\r\n\r\n  constructor(private service: EmpresaService, private messageService: MessageService, private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.items = [{ label: 'Cadastro', url: './cadastro', target: '_self'}, { label: 'Parceiro' }];\r\n\r\n    this.home = { icon: 'pi pi-home', routerLink: '/' };\r\n\r\n    this.getAll();\r\n  }\r\n\r\n  openNew() {\r\n    this.submitted = false;\r\n    this.parceiroDialog = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.service.getAllParceiros(1).subscribe(\r\n      data => {\r\n        this.lista = data\r\n      },\r\n      error => {\r\n        // Handle the error in case of failure\r\n        console.error('Error fetching states:', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteSelecteds() {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar selecionados?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => !this.selecteds?.includes(val));\r\n        this.selecteds = null;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item(ns) Deletado(s)', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(item: Parceiro) {\r\n    this.item = { ...item };\r\n    //fazer o check nos itens existentes no enum do item\r\n    this.parceiroDialog = true;\r\n  }\r\n\r\n  delete(item: Parceiro) {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar ' + item.nome + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => val.id !== item.id);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Deletado', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.parceiroDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n\r\n    if (this.item.nome?.trim()) {\r\n      if (this.item.id) {\r\n        this.lista[this.findIndexById(this.item.id)] = this.item;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Atualizado', life: 3000 });\r\n      } else {\r\n        this.item.id = GeralUtil.createId();\r\n        this.lista.push(this.item);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Criado', life: 3000 });\r\n      }\r\n\r\n      this.lista = [...this.lista];\r\n      this.parceiroDialog = false;\r\n    }\r\n  }\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.lista.length; i++) {\r\n      if (this.lista[i].id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-1\" style=\"position: static;\">\r\n        <app-menu-lateral></app-menu-lateral>\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <div class=\"card flex justify-content-center\">\r\n            <p-breadcrumb class=\"max-w-full\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n        </div>\r\n        <p-card header=\"Gerenciamento de Parceiros\">\r\n            \r\n                <!-- tabelinha a seguir -->\r\n\r\n                <div class=\"card\">\r\n                    <p-toast></p-toast>\r\n                    <p-table\r\n                        #dt\r\n                        [value]=\"lista\"\r\n                        [rows]=\"10\"\r\n                        [paginator]=\"true\"\r\n                        [globalFilterFields]=\"['tipo_pessoa', 'nome', 'documento', 'nascimento', 'area_atuacao']\"\r\n                        [tableStyle]=\"{ 'min-width': '75rem' }\"\r\n                        [(selection)]=\"selecteds\"\r\n                        [rowHover]=\"true\"\r\n                        dataKey=\"id\"\r\n                        currentPageReportTemplate=\"{first} à {last} de {totalRecords}\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                    >\r\n                        <ng-template pTemplate=\"caption\">\r\n                                <p-toolbar>\r\n                                    <ng-template pTemplate=\"left\">\r\n                                        <button pButton pRipple label=\"\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" (click)=\"openNew()\"></button>\r\n                                        <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger mr-2\" (click)=\"deleteSelecteds()\" [disabled]=\"!selecteds || !selecteds.length\"></button>\r\n                                        <span class=\"p-input-icon-left\">\r\n                                            <i class=\"pi pi-search\"></i>\r\n                                            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Pesquisar...\" />\r\n                                        </span>\r\n                                    </ng-template>\r\n                            \r\n                                    <ng-template pTemplate=\"right\">\r\n                                        <p-fileUpload mode=\"basic\" accept=\"image/*\" [maxFileSize]=\"1000000\" label=\"Importar\" chooseLabel=\"Import\" class=\"mr-2 inline-block\"></p-fileUpload>\r\n                                        <button pButton pRipple label=\"Exportar\" icon=\"pi pi-upload\" class=\"p-button-help\"></button>\r\n                                    </ng-template>\r\n                                </p-toolbar>\r\n                            \r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th style=\"width: 4rem\">\r\n                                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                                </th>\r\n                                <th>Imagem</th>\r\n                                <th pSortableColumn=\"tipo_pessoa\">Tipo de Pessoa <p-sortIcon field=\"tipo_pessoa\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"nome\">Nome <p-sortIcon field=\"nome\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"documento\">Documento <p-sortIcon field=\"documento\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"nascimento\">Nascimento <p-sortIcon field=\"nascimento\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"area_atuacao\">Área de Atuação <p-sortIcon field=\"area_atuacao\"></p-sortIcon></th>\r\n                                <th style=\"width: 8rem\"></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-item>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-tableCheckbox [value]=\"item\"></p-tableCheckbox>\r\n                                </td>\r\n                                <td><img [src]=\"'./assets/images/mock/' + item.imagem_principal\" [alt]=\"item.nome\" width=\"50\" class=\"shadow-4\" /></td>\r\n                                <td>{{ item.tipo_pessoa }}</td>\r\n                                <td>{{ item.nome }}</td>\r\n                                <td>{{ item.documento }}</td>\r\n                                <td>{{ item.nascimento | date:'dd/MM/yyyy'}}</td>\r\n                                <td>{{ item.area_atuacao }}</td>\r\n                                <td>\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" (click)=\"edit(item)\"></button>\r\n                                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" (click)=\"delete(item)\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"flex align-items-center justify-content-between\">Total: {{ lista ? lista.length : 0 }}</div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n                <p-dialog [(visible)]=\"parceiroDialog\" [style]=\"{ width: '40%' }\" header=\"Detalhes do Parceiro\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n                    <ng-template pTemplate=\"content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-5\">\r\n                                <img [src]=\"'./assets/images/mock/' + item.imagem_principal\" [alt]=\"item.imagem_principal\" class=\"block m-auto pb-3\" *ngIf=\"item.imagem_principal\" />\r\n                                <div class=\"field\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <label for=\"tipo_pessoa\">Tipo de pessoa: </label>\r\n                                        </div>\r\n                                        <div class=\"col-12\">\r\n                                            <p-selectButton [options]=\"tipos_pessoas\" [(ngModel)]=\"item.tipo_pessoa\"></p-selectButton>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-7\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"nome\">Nome:</label>\r\n                                    <input type=\"text\" pInputText id=\"nome\" [(ngModel)]=\"item.nome\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.nome\">Name is required.</small>\r\n                                </div>\r\n                                <div class=\"field\" *ngIf=\"item.tipo_pessoa == 'Jurídica'\">\r\n                                    <label for=\"razao_social\">Razão Social:</label>\r\n                                    <input type=\"text\" pInputText id=\"razao_social\" [(ngModel)]=\"item.razao_social\" required autofocus />\r\n                                </div>\r\n                                <div class=\"field\">\r\n                                    <label for=\"nascimento\" *ngIf=\"item.tipo_pessoa == 'Jurídica'\">Fundado em:</label>\r\n                                    <label for=\"nascimento\" *ngIf=\"item.tipo_pessoa != 'Jurídica'\">Nascimento:</label>\r\n                                    <p-calendar [(ngModel)]=\"item.nascimento\" dateFormat=\"dd.mm.yy\"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"area_atuacao\">Área Atuação:</label>\r\n                                    <p-dropdown [options]=\"areas_atuacao\" [(ngModel)]=\"item.area_atuacao\"></p-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"documento\" *ngIf=\"item.tipo_pessoa == 'Jurídica'\">CNPJ:</label>\r\n                                    <label for=\"documento\" *ngIf=\"item.tipo_pessoa != 'Jurídica'\">CPF:</label>\r\n                                    <input type=\"text\" pInputText id=\"documento\" [(ngModel)]=\"item.documento\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.documento\">Name is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"login.email\">E-mail:</label>\r\n                                    <input type=\"text\" pInputText id=\"login.email\" [(ngModel)]=\"item.login.email\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.login.email\">Apelido is required.</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"login.email\">Username:</label>\r\n                                    <input type=\"text\" pInputText id=\"login.username\" [(ngModel)]=\"item.login.username\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.login.username\">Apelido is required.</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </ng-template>\r\n                \r\n                    <ng-template pTemplate=\"footer\">\r\n                        <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\r\n                        <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"save()\"></button>\r\n                    </ng-template>\r\n                </p-dialog>\r\n                \r\n                <p-confirmDialog [style]=\"{ width: '40%' }\"></p-confirmDialog>\r\n\r\n            \r\n        </p-card>\r\n\r\n    </div>\r\n    <div class=\"col-md-1\"></div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { SituacaoEstoqueEnum, SituacaoEstoqueEnumMock } from 'app/models/enum/situacao-estoque.enum';\r\nimport { TipoProdutoEnum, TipoProdutoEnumMock } from 'app/models/enum/tipo-produto.enum';\r\nimport { Produto } from 'app/models/produto/produto';\r\nimport { ProdutoService } from 'app/services/produto.service';\r\nimport { GeralUtil } from 'app/utils/geral.util';\r\nimport { ConfirmationService, MenuItem, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-produto',\r\n  templateUrl: './produto.component.html',\r\n  styleUrls: ['./produto.component.scss']\r\n})\r\nexport class ProdutoComponent {\r\n  items: MenuItem[] | undefined;\r\n  home: MenuItem | undefined;\r\n\r\n  productDialog: boolean = false;\r\n  lista!: Produto[];\r\n  item!: Produto;\r\n  selecteds!: Produto[] | null;\r\n\r\n  submitted: boolean = false;\r\n\r\n  statuses: SituacaoEstoqueEnum[] = SituacaoEstoqueEnumMock.getMockArray();\r\n  tipos: TipoProdutoEnum[] = TipoProdutoEnumMock.getMockArray();\r\n\r\n  constructor(private service: ProdutoService, private messageService: MessageService, private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit() {\r\n    this.items = [{ label: 'Cadastro', url: './cadastro', target: '_self'}, { label: 'Produto' }];\r\n\r\n    this.home = { icon: 'pi pi-home', routerLink: '/' };\r\n\r\n    this.getAll();\r\n  }\r\n\r\n  openNew() {\r\n    this.submitted = false;\r\n    this.productDialog = true;\r\n  }\r\n\r\n  getAll() {\r\n    this.service.getAllProdutos().subscribe(\r\n      data => {\r\n        this.lista = data\r\n      },\r\n      error => {\r\n        // Handle the error in case of failure\r\n        console.error('Error fetching states:', error);\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteSelecteds() {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar selecionados?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => !this.selecteds?.includes(val));\r\n        this.selecteds = null;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item(ns) Deletado(s)', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(item: Produto) {\r\n    this.item = { ...item };\r\n    this.productDialog = true;\r\n  }\r\n\r\n  delete(item: Produto) {\r\n    this.confirmationService.confirm({\r\n      message: 'Você tem certeza que deseja deletar ' + item.nome + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.lista = this.lista.filter((val) => val.id !== item.id);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Deletado', life: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.productDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n\r\n    if (this.item.nome?.trim()) {\r\n      if (this.item.id) {\r\n        this.lista[this.findIndexById(this.item.id)] = this.item;\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Atualizado', life: 3000 });\r\n      } else {\r\n        this.item.id = GeralUtil.createId();\r\n        this.item.imagem_principal = 'product-placeholder.svg';\r\n        this.lista.push(this.item);\r\n        this.messageService.add({ severity: 'success', summary: 'Sucesso', detail: 'Item Criado', life: 3000 });\r\n      }\r\n\r\n      this.lista = [...this.lista];\r\n      this.productDialog = false;\r\n    }\r\n  }\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.lista.length; i++) {\r\n      if (this.lista[i].id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-1\" style=\"position: static;\">\r\n        <app-menu-lateral></app-menu-lateral>\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <div class=\"card flex justify-content-center\">\r\n            <p-breadcrumb class=\"max-w-full\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n        </div>\r\n        <p-card header=\"Gerenciamento de Produtos\">\r\n            \r\n                <!-- tabelinha a seguir -->\r\n\r\n                <div class=\"card\">\r\n                    <p-toast></p-toast>\r\n                    <p-table\r\n                        #dt\r\n                        [value]=\"lista\"\r\n                        [rows]=\"10\"\r\n                        [paginator]=\"true\"\r\n                        [globalFilterFields]=\"['nome', 'preco', 'tipo', 'situacao_produto']\"\r\n                        [tableStyle]=\"{ 'min-width': '75rem' }\"\r\n                        [(selection)]=\"selecteds\"\r\n                        [rowHover]=\"true\"\r\n                        dataKey=\"id\"\r\n                        currentPageReportTemplate=\"{first} à {last} de {totalRecords}\"\r\n                        [showCurrentPageReport]=\"true\"\r\n                    >\r\n                        <ng-template pTemplate=\"caption\">\r\n                                <p-toolbar>\r\n                                    <ng-template pTemplate=\"left\">\r\n                                        <button pButton pRipple label=\"\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" (click)=\"openNew()\"></button>\r\n                                        <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger mr-2\" (click)=\"deleteSelecteds()\" [disabled]=\"!selecteds || !selecteds.length\"></button>\r\n                                        <span class=\"p-input-icon-left\">\r\n                                            <i class=\"pi pi-search\"></i>\r\n                                            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Pesquisar...\" />\r\n                                        </span>\r\n                                    </ng-template>\r\n                            \r\n                                    <ng-template pTemplate=\"right\">\r\n                                        <p-fileUpload mode=\"basic\" accept=\"image/*\" [maxFileSize]=\"1000000\" label=\"Importar\" chooseLabel=\"Import\" class=\"mr-2 inline-block\"></p-fileUpload>\r\n                                        <button pButton pRipple label=\"Exportar\" icon=\"pi pi-upload\" class=\"p-button-help\"></button>\r\n                                    </ng-template>\r\n                                </p-toolbar>\r\n                            \r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th style=\"width: 4rem\">\r\n                                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                                </th>\r\n                                <th pSortableColumn=\"nome\">Nome <p-sortIcon field=\"nome\"></p-sortIcon></th>\r\n                                <th>Imagem</th>\r\n                                <th pSortableColumn=\"preco\">Preço <p-sortIcon field=\"preco\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"tipo\">Tipo de Produto <p-sortIcon field=\"tipo\"></p-sortIcon></th>\r\n                                <th pSortableColumn=\"situacao_produto\">Situação do Estoque<p-sortIcon field=\"situacao_produto\"></p-sortIcon></th>\r\n                                <!-- <th pSortableColumn=\"venda_pelo_app\">Venda pelo App<p-sortIcon field=\"venda_pelo_app\"></p-sortIcon></th> -->\r\n                                <th style=\"width: 8rem\"></th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-item>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-tableCheckbox [value]=\"item\"></p-tableCheckbox>\r\n                                </td>\r\n                                <td>{{ item.nome }}</td>\r\n                                <td><img [src]=\"'./assets/images/mock/' + item.imagem_principal\" [alt]=\"item.nome\" width=\"50\" class=\"shadow-4\" /></td>\r\n                                <td>{{ item.preco | currency: 'BRL' }}</td>\r\n                                <td>{{ item.tipo }}</td>\r\n                                <td>\r\n                                    <p-progressBar [value]=\"item.quantidade*10\"></p-progressBar>\r\n                                </td>\r\n                                <!-- <td>\r\n                                    <p-inputSwitch [(ngModel)]=\"item.venda_pelo_app\" style=\"border-left: 100px;\"></p-inputSwitch>\r\n                                </td> -->\r\n                                <td>\r\n                                    <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" (click)=\"edit(item)\"></button>\r\n                                    <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" (click)=\"delete(item)\"></button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"summary\">\r\n                            <div class=\"flex align-items-center justify-content-between\">Total: {{ lista ? lista.length : 0 }}</div>\r\n                        </ng-template>\r\n                    </p-table>\r\n                </div>\r\n                <p-dialog [(visible)]=\"productDialog\" [style]=\"{ width: '40%' }\" header=\"Detalhes do Produto\" [modal]=\"true\" styleClass=\"p-fluid\">\r\n                    <ng-template pTemplate=\"content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-5\">\r\n                                <img [src]=\"'./assets/images/mock/' + item.imagem_principal\" [alt]=\"item.imagem_principal\" class=\"block m-auto pb-3\" *ngIf=\"item.imagem_principal\" />\r\n                                <!-- <div class=\"field\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-8\">\r\n                                            <label for=\"venda_pelo_app\">Vender pelo app: </label>\r\n                                        </div>\r\n                                        <div class=\"col-4\">\r\n                                            <p-inputSwitch [(ngModel)]=\"item.venda_pelo_app\" style=\"border-left: 100px;\"></p-inputSwitch>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                            <div class=\"col-7\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"nome\">Nome:</label>\r\n                                    <input type=\"text\" pInputText id=\"nome\" [(ngModel)]=\"item.nome\" required autofocus />\r\n                                    <small class=\"p-error\" *ngIf=\"submitted && !item.nome\">Name is required.</small>\r\n                                </div>\r\n                                <div class=\"field\">\r\n                                    <label for=\"descricao\">Descrição:</label>\r\n                                    <textarea id=\"descricao\" pInputTextarea [(ngModel)]=\"item.descricao\" required rows=\"3\" cols=\"20\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"situacao_produto\">Situação do Produto:</label>\r\n                                    <p-dropdown [options]=\"statuses\" [(ngModel)]=\"item.situacao_produto\"></p-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"tipo\">Tipo:</label>\r\n                                    <p-dropdown [options]=\"tipos\" [(ngModel)]=\"item.tipo\"></p-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"preco\">Preço:</label>\r\n                                    <p-inputNumber id=\"preco\" [(ngModel)]=\"item.preco\" mode=\"currency\" currency=\"BRL\" locale=\"pt-BR\"></p-inputNumber>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"field\">\r\n                                    <label for=\"quantidade\">Quantidade:</label>\r\n                                    <p-inputNumber id=\"quantidade\" [(ngModel)]=\"item.quantidade\"></p-inputNumber>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </ng-template>\r\n                \r\n                    <ng-template pTemplate=\"footer\">\r\n                        <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\r\n                        <button pButton pRipple label=\"Salvar\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"save()\"></button>\r\n                    </ng-template>\r\n                </p-dialog>\r\n                \r\n                <p-confirmDialog [style]=\"{ width: '40%' }\"></p-confirmDialog>\r\n\r\n            \r\n        </p-card>\r\n\r\n    </div>\r\n    <div class=\"col-md-1\"></div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-goodbye',\r\n  templateUrl: './goodbye.component.html',\r\n  styleUrls: ['./goodbye.component.scss']\r\n})\r\nexport class GoodbyeComponent {\r\n  name = 'Jane';\r\n}\r\n","<h1>Goodbye, {{ name }}!</h1>\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { MockRandom } from '../../utils/mock-random';\r\nimport { Cidade } from 'app/models/endereco/cidade'; \r\nimport { Endereco, EnderecoClass } from 'app/models/endereco/endereco';\r\nimport { EnderecoUtil } from 'app/utils/endereco.util';\r\nimport cep from 'cep-promise'; //https://www.npmjs.com/package/cep-promise\r\nimport { ErroCEP } from 'app/models/erro/erro-cep';\r\nconst cidades = require('cidades-promise'); //https://www.npmjs.com/package/cidades-promise\r\n\r\n@Component({\r\n  selector: 'app-hello',\r\n  templateUrl: './hello.component.html',\r\n  styleUrls: ['./hello.component.scss']\r\n})\r\nexport class HelloComponent {\r\n    name = MockRandom.getSentence() + \"\";\r\n    cep = cep;\r\n    formGroup!: FormGroup;\r\n\r\n    categories: any[] = [\r\n        { name: 'Accounting', key: 'A' },\r\n        { name: 'Marketing', key: 'M' },\r\n        { name: 'Production', key: 'P' },\r\n        { name: 'Research', key: 'R' }\r\n    ];\r\n    cidade?: Cidade\r\n\r\n    constructor(\r\n      ) {\r\n        //this.getAllEstados();\r\n        \r\n      }\r\n\r\n    ngOnInit() {\r\n        this.formGroup = new FormGroup({\r\n            selectedCategory: new FormControl()\r\n        });\r\n        this.getEnderecoByCEP(29171069);\r\n    }\r\n\r\n    getEnderecoByCEP(cepNumber: number) {\r\n      let retorno: Endereco = new EnderecoClass('', '', '', '', '');\r\n      cep(cepNumber)\r\n      .then((res: Endereco) => {\r\n          retorno = res\r\n          this.name = retorno.street\r\n      })\r\n      .catch((erro: ErroCEP) => {\r\n          window.alert(erro.errors[0].message)\r\n      })\r\n    }\r\n\r\n    getAllEstados(): void {\r\n        cidades.getCitiesByDdd(27).then((res: Cidade) => {\r\n            this.cidade = res;\r\n            this.name = this.cidade.estado\r\n        })\r\n        \r\n        // this.enderecoService.getAllEstados().subscribe(\r\n        //   estados => {\r\n        //     this.listaEstados.push(...estados);\r\n        //     this.name = this.listaEstados[0].estado;\r\n        //   },\r\n        //   error => {\r\n        //     // Handle the error in case of failure\r\n        //     console.error('Error fetching states:', error);\r\n        //   }\r\n        // );\r\n      }\r\n}\r\n","<h1>Hello, {{ name }}!</h1>\r\ntestando isso aqui funciona por favor\r\n\r\n\r\n\r\n<div class=\"card flex justify-content-center\">\r\n    <form class=\"flex flex-column gap-3\" [formGroup]=\"formGroup\">\r\n        <div *ngFor=\"let category of categories\" class=\"field-checkbox\">\r\n            <p-radioButton [inputId]=\"category.key\" [value]=\"category\" formControlName=\"selectedCategory\"></p-radioButton>\r\n            <label [for]=\"category.key\" class=\"ml-2\">{{ category.name }}</label>\r\n        </div>\r\n    </form>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-perfil',\r\n  templateUrl: './perfil.component.html',\r\n  styleUrls: ['./perfil.component.scss']\r\n})\r\nexport class PerfilComponent {\r\n  name = 'Jane';\r\n  teste = undefined;\r\n  valid = false;\r\n\r\n  items: MenuItem[] | undefined;\r\n\r\n    home: MenuItem | undefined;\r\n\r\n    ngOnInit() {\r\n        this.items = [{ label: 'Perfil' }];\r\n\r\n        this.home = { icon: 'pi pi-home', routerLink: '/' };\r\n    }\r\n\r\n    validate() {\r\n      if (this.teste == null) {\r\n        this.valid = true;\r\n      }\r\n      else {\r\n        this.valid = false;\r\n      }\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-1\"></div>\r\n    <div class=\"col-md-10\">\r\n        <div class=\"card flex justify-content-center\">\r\n            <p-breadcrumb class=\"max-w-full\" [model]=\"items\" [home]=\"home\"></p-breadcrumb>\r\n        </div>\r\n        <p-card header=\"Perfil\">\r\n            <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <input pInputText id=\"username\" [(ngModel)]=\"teste\" *ngIf=\"!valid\" (change)=\"validate()\"/>\r\n                        <input pInputText class=\"ng-invalid ng-dirty\" [(ngModel)]=\"teste\" *ngIf=\"valid\" (change)=\"validate()\"/>\r\n                        <label htmlFor=\"username\">E-mail</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <input pInputText id=\"username\" [(ngModel)]=\"teste\" *ngIf=\"!valid\" (change)=\"validate()\"/>\r\n                        <input pInputText class=\"ng-invalid ng-dirty\" [(ngModel)]=\"teste\" *ngIf=\"valid\" (change)=\"validate()\"/>\r\n                        <label htmlFor=\"username\">CPF</label>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                    <span class=\"p-float-label\">\r\n                        <input pInputText id=\"username\" [(ngModel)]=\"teste\" *ngIf=\"!valid\" (change)=\"validate()\"/>\r\n                        <input pInputText class=\"ng-invalid ng-dirty\" [(ngModel)]=\"teste\" *ngIf=\"valid\" (change)=\"validate()\"/>\r\n                        <label htmlFor=\"username\">Nascimento</label>\r\n                    </span>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                    <p class=\"m-0\">Login:</p>\r\n                    <input type=\"text\" pInputText [(ngModel)]=\"name\" />\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <!-- button aqui -->\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <p class=\"m-0\">Permissões: X Y Z</p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </p-card>\r\n\r\n    </div>\r\n    <div class=\"col-md-1\"></div>\r\n</div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Colaborador, ColaboradorMock } from '../models/colaborador/colaborador';\r\nimport { environment } from '../../enviroments/environment';\r\nimport { Permissao, PermissaoMock } from 'app/models/colaborador/permissao';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ColaboradorService {\r\n  url = environment.apiUrl + '/colaborador';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Retorna todos\r\n  getAllColaboradors(): Observable<Colaborador[]> {\r\n    if (environment.mock) {\r\n        return of(ColaboradorMock.getMockArray(20));\r\n    }\r\n    else {\r\n        return this.http.get<Colaborador[]>(this.url);\r\n    }\r\n  }\r\n\r\n  // Retorna um pelo ID\r\n  getColaboradorById(id: number): Observable<Colaborador> {\r\n    if (environment.mock) {\r\n        return of(ColaboradorMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Colaborador>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna um pelo ID\r\n  getAllPermissoes(id: number): Observable<Permissao[]> {\r\n    if (environment.mock) {\r\n        return of(PermissaoMock.getMockArray(10));\r\n    }\r\n    else {\r\n        return this.http.get<Permissao[]>(`${this.url}/permissao/${id}`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addColaborador(perfil: Colaborador): Observable<Colaborador> {\r\n    if (environment.mock) {\r\n        return of(ColaboradorMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Colaborador>(this.url, perfil);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateColaborador(perfil: Colaborador): Observable<Colaborador> {\r\n    if (environment.mock) {\r\n        return of(ColaboradorMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Colaborador>(`${this.url}/${perfil.id}`, perfil);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteColaboradorById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Empresa, EmpresaMock } from '../models/empresa/empresa';\r\nimport { environment } from '../../enviroments/environment';\r\nimport { AreaAtuacaoEnum } from 'app/models/enum/area-atuacao.enum';\r\nimport { SituacaoEnum } from 'app/models/enum/situacao.enum';\r\nimport { Parceiro, ParceiroMock } from 'app/models/empresa/parceiro';\r\nimport { Colaborador, ColaboradorMock } from 'app/models/colaborador/colaborador';\r\nimport { Endereco, EnderecoMock } from 'app/models/endereco/endereco';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmpresaService {\r\n  url = environment.apiUrl + '/empresa';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Retorna todos\r\n  getAllEmpresas(): Observable<Empresa[]> {\r\n    if (environment.mock) {\r\n        return of(EmpresaMock.getMockArray(20));\r\n    }\r\n    else {\r\n        return this.http.get<Empresa[]>(this.url);\r\n    }\r\n  }\r\n\r\n  // Retorna todos\r\n  getAllParceiros(id: number): Observable<Parceiro[]> {\r\n    if (environment.mock) {\r\n        return of(ParceiroMock.getMockArray(20));\r\n    }\r\n    else {\r\n      return this.http.get<Parceiro[]>(`${this.url}/parceiro/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todos\r\n  getAllColaboradores(id: number): Observable<Colaborador[]> {\r\n    if (environment.mock) {\r\n        return of(ColaboradorMock.getMockArray(20));\r\n    }\r\n    else {\r\n      return this.http.get<Colaborador[]>(`${this.url}/colaborador/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todos\r\n  getAllEnderecos(id: number): Observable<Endereco[]> {\r\n    if (environment.mock) {\r\n        return of(EnderecoMock.getMockArray(20));\r\n    }\r\n    else {\r\n      return this.http.get<Endereco[]>(`${this.url}/endereco/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todos\r\n  getEmpresasByArea(area: AreaAtuacaoEnum): Observable<Empresa[]> {\r\n    if (environment.mock) {\r\n        return of(EmpresaMock.getMockArrayByArea(20, area));\r\n    }\r\n    else {\r\n      return this.http.get<Empresa[]>(`${this.url}/area/${area}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todos\r\n  getEmpresasBySituacao(situacao: SituacaoEnum): Observable<Empresa[]> {\r\n    if (environment.mock) {\r\n        return of(EmpresaMock.getMockArrayBySituacao(20, situacao));\r\n    }\r\n    else {\r\n      return this.http.get<Empresa[]>(`${this.url}/situacao/${situacao}`);\r\n    }\r\n  }\r\n\r\n  // Retorna um produto pelo ID\r\n  getEmpresaById(id: number): Observable<Empresa> {\r\n    if (environment.mock) {\r\n        return of(EmpresaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Empresa>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addEmpresa(empresa: Empresa): Observable<Empresa> {\r\n    if (environment.mock) {\r\n        return of(EmpresaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Empresa>(this.url, empresa);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateEmpresa(empresa: Empresa): Observable<Empresa> {\r\n    if (environment.mock) {\r\n        return of(EmpresaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Empresa>(`${this.url}/${empresa.id}`, empresa);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteEmpresaById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { environment } from '../../enviroments/environment';\r\nimport { Endereco, EnderecoMock } from 'app/models/endereco/endereco';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EnderecoService {\r\n  url = environment.apiUrl + '/endereco';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Retorna todos\r\n  getAllEnderecos(): Observable<Endereco[]> {\r\n    if (environment.mock) {\r\n        return of(EnderecoMock.getMockArray(20));\r\n    }\r\n    else {\r\n        return this.http.get<Endereco[]>(this.url);\r\n    }\r\n  }\r\n\r\n  // Retorna um pelo ID\r\n  getEnderecoById(id: number): Observable<Endereco> {\r\n    if (environment.mock) {\r\n        return of(EnderecoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Endereco>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addEndereco(item: Endereco): Observable<Endereco> {\r\n    if (environment.mock) {\r\n        return of(EnderecoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Endereco>(this.url, item);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateEndereco(item: Endereco): Observable<Endereco> {\r\n    if (environment.mock) {\r\n        return of(EnderecoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Endereco>(`${this.url}/${item.id}`, item);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteEnderecoById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Imagem, ImagemMock } from '../models/imagem';\r\nimport { environment } from '../../enviroments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImagemService {\r\n  url = environment.apiUrl + '/imagem';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Retorna todos\r\n  getAllImagems(): Observable<Imagem[]> {\r\n    if (environment.mock) {\r\n        return of(ImagemMock.getMockArray(20));\r\n    }\r\n    else {\r\n        return this.http.get<Imagem[]>(this.url);\r\n    }\r\n  }\r\n\r\n  // Retorna um pelo ID\r\n  getImagemById(id: number): Observable<Imagem> {\r\n    if (environment.mock) {\r\n        return of(ImagemMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Imagem>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addImagem(perfil: Imagem): Observable<Imagem> {\r\n    if (environment.mock) {\r\n        return of(ImagemMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Imagem>(this.url, perfil);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateImagem(perfil: Imagem): Observable<Imagem> {\r\n    if (environment.mock) {\r\n        return of(ImagemMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Imagem>(`${this.url}/${perfil.id}`, perfil);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteImagemById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Ingresso, IngressoMock } from '../models/ingresso/ingresso';\r\nimport { environment } from '../../enviroments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IngressoService {\r\n  url = environment.apiUrl + '/ingresso';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Retorna todos\r\n  getAllIngressos(): Observable<Ingresso[]> {\r\n    if (environment.mock) {\r\n        return of(IngressoMock.getMockArray(20));\r\n    }\r\n    else {\r\n        return this.http.get<Ingresso[]>(this.url);\r\n    }\r\n  }\r\n\r\n  // Retorna um pelo ID\r\n  getIngressoById(id: number): Observable<Ingresso> {\r\n    if (environment.mock) {\r\n        return of(IngressoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Ingresso>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addIngresso(perfil: Ingresso): Observable<Ingresso> {\r\n    if (environment.mock) {\r\n        return of(IngressoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Ingresso>(this.url, perfil);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateIngresso(perfil: Ingresso): Observable<Ingresso> {\r\n    if (environment.mock) {\r\n        return of(IngressoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Ingresso>(`${this.url}/${perfil.id}`, perfil);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteIngressoById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { environment } from '../../enviroments/environment';\r\nimport { Produto, ProdutoMock } from 'app/models/produto/produto';\r\nimport { TipoProdutoEnum } from 'app/models/enum/tipo-produto.enum';\r\nimport { Bebida, BebidaMock } from 'app/models/produto/bebida';\r\nimport { Comida, ComidaMock } from 'app/models/produto/comida';\r\nimport { Brinde, BrindeMock } from 'app/models/produto/brinde';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProdutoService {\r\n\r\n  url = environment.apiUrl + '/produto';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Retorna todos\r\n  getAllProdutos(): Observable<Produto[]> {\r\n    if (environment.mock) {\r\n        return of(ProdutoMock.getMockArray(20));\r\n    }\r\n    else {\r\n        return this.http.get<Produto[]>(this.url);\r\n    }\r\n  }\r\n\r\n  // Retorna um produto pelo ID\r\n  getProdutoById(id: number): Observable<Produto> {\r\n    if (environment.mock) {\r\n        return of(ProdutoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Produto>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todos do tipo de produto passado como parametro\r\n  getAllByType(tipo: TipoProdutoEnum): Observable<Produto[]> {\r\n    if (environment.mock) {\r\n      return of(ProdutoMock.getMockArrayByTipo(20, tipo));\r\n    }\r\n    else {\r\n      return this.http.get<Produto[]>(`${this.url}/tipo/${tipo}`);\r\n    }\r\n  }  \r\n\r\n  // Adiciona um novo\r\n  addProduto(perfil: Produto): Observable<Produto> {\r\n    if (environment.mock) {\r\n        return of(ProdutoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Produto>(this.url, perfil);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateProduto(perfil: Produto): Observable<Produto> {\r\n    if (environment.mock) {\r\n        return of(ProdutoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Produto>(`${this.url}/${perfil.id}`, perfil);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteProdutoById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/${id}`);\r\n    }\r\n  }\r\n\r\n\r\n  /////////////////////////BEBIDAS\r\n  // Retorna um bebida pelo ID\r\n  getBebidaById(id: number): Observable<Bebida> {\r\n    if (environment.mock) {\r\n        return of(BebidaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Bebida>(`${this.url}/bebida/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todas as bebidas\r\n  getAllBebidasSimples(): Observable<Produto[]> {\r\n    return this.getAllByType(TipoProdutoEnum.bebida);\r\n  }\r\n\r\n  // Retorna todas as bebidas\r\n  getAllBebidas(): Observable<Bebida[]> {\r\n    if (environment.mock) {\r\n        return of(BebidaMock.getMockArray(20));\r\n    }\r\n    else {\r\n      return this.http.get<Bebida[]>(`${this.url}/bebida`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addBebida(bebida: Bebida): Observable<Bebida> {\r\n    if (environment.mock) {\r\n        return of(BebidaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Bebida>(`${this.url}/bebida`, bebida);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateBebida(bebida: Bebida): Observable<Bebida> {\r\n    if (environment.mock) {\r\n        return of(BebidaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Bebida>(`${this.url}/bebida/${bebida.produto.id}`, bebida);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteBebidaById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/bebida/${id}`);\r\n    }\r\n  }\r\n\r\n  /////////////////////////COMIDAS\r\n  // Retorna um comida pelo ID\r\n  getComidaById(id: number): Observable<Comida> {\r\n    if (environment.mock) {\r\n        return of(ComidaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Comida>(`${this.url}/comida/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todas as comidas\r\n  getAllComidasSimples(): Observable<Produto[]> {\r\n    return this.getAllByType(TipoProdutoEnum.comida);\r\n  }\r\n\r\n  // Retorna todas as comidas\r\n  getAllComidas(): Observable<Comida[]> {\r\n    if (environment.mock) {\r\n        return of(ComidaMock.getMockArray(20));\r\n    }\r\n    else {\r\n      return this.http.get<Comida[]>(`${this.url}/comida`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addComida(comida: Comida): Observable<Comida> {\r\n    if (environment.mock) {\r\n        return of(ComidaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Comida>(`${this.url}/comida`, comida);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateComida(comida: Comida): Observable<Comida> {\r\n    if (environment.mock) {\r\n        return of(ComidaMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Comida>(`${this.url}/comida/${comida.produto.id}`, comida);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteComidaById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/comida/${id}`);\r\n    }\r\n  }\r\n\r\n  /////////////////////////BRINDE\r\n  // Retorna um brinde pelo ID\r\n  getBrindeById(id: number): Observable<Brinde> {\r\n    if (environment.mock) {\r\n        return of(BrindeMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.get<Brinde>(`${this.url}/brinde/${id}`);\r\n    }\r\n  }\r\n\r\n  // Retorna todos os brindes\r\n  getAllBrindesSimples(): Observable<Produto[]> {\r\n    return this.getAllByType(TipoProdutoEnum.brinde);\r\n  }\r\n\r\n  // Retorna todas os brindes\r\n  getAllBrindes(): Observable<Brinde[]> {\r\n    if (environment.mock) {\r\n        return of(BrindeMock.getMockArray(20));\r\n    }\r\n    else {\r\n      return this.http.get<Brinde[]>(`${this.url}/brinde`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addBrinde(brinde: Brinde): Observable<Brinde> {\r\n    if (environment.mock) {\r\n        return of(BrindeMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Brinde>(`${this.url}/brinde`, brinde);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateBrinde(brinde: Brinde): Observable<Brinde> {\r\n    if (environment.mock) {\r\n        return of(BrindeMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Brinde>(`${this.url}/brinde/${brinde.produto.id}`, brinde);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteBrindeById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/brinde/${id}`);\r\n    }\r\n  }\r\n\r\n  /////////////////////////OUTROS\r\n  // Retorna todos outros produtos\r\n  getAllOutrosSimples(): Observable<Produto[]> {\r\n    return this.getAllByType(TipoProdutoEnum.outro);\r\n  }\r\n\r\n  // Retorna todas os outros\r\n  getAllOutros(): Observable<Produto[]> {\r\n    if (environment.mock) {\r\n        return of(ProdutoMock.getMockArray(20));\r\n    }\r\n    else {\r\n      return this.http.get<Produto[]>(`${this.url}/outro`);\r\n    }\r\n  }\r\n\r\n  // Adiciona um novo\r\n  addOutro(produto: Produto): Observable<Produto> {\r\n    if (environment.mock) {\r\n        return of(ProdutoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.post<Produto>(`${this.url}/outro`, produto);\r\n    }\r\n  }\r\n\r\n  // Atualiza um existente\r\n  updateOutro(produto: Produto): Observable<Produto> {\r\n    if (environment.mock) {\r\n        return of(ProdutoMock.getMock());\r\n    }\r\n    else {\r\n        return this.http.put<Produto>(`${this.url}/outro/${produto.id}`, produto);\r\n    }\r\n  }\r\n\r\n  // Remove um pelo ID\r\n  deleteOutroById(id: number): Observable<void> {\r\n    if (environment.mock) {\r\n        return of();\r\n    }\r\n    else {\r\n        return this.http.delete<void>(`${this.url}/outro/${id}`);\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n\r\n}\r\n","import { Estado } from \"app/models/endereco/estado\";\r\n\r\nexport class EstadoService {\r\n    \r\n    public static estados: Estado[] = [\r\n        {\"nome\": \"Acre\", \"sigla\": \"AC\"},\r\n        {\"nome\": \"Alagoas\", \"sigla\": \"AL\"},\r\n        {\"nome\": \"Amapá\", \"sigla\": \"AP\"},\r\n        {\"nome\": \"Amazonas\", \"sigla\": \"AM\"},\r\n        {\"nome\": \"Bahia\", \"sigla\": \"BA\"},\r\n        {\"nome\": \"Ceará\", \"sigla\": \"CE\"},\r\n        {\"nome\": \"Distrito Federal\", \"sigla\": \"DF\"},\r\n        {\"nome\": \"Espírito Santo\", \"sigla\": \"ES\"},\r\n        {\"nome\": \"Goiás\", \"sigla\": \"GO\"},\r\n        {\"nome\": \"Maranhão\", \"sigla\": \"MA\"},\r\n        {\"nome\": \"Mato Grosso\", \"sigla\": \"MT\"},\r\n        {\"nome\": \"Mato Grosso do Sul\", \"sigla\": \"MS\"},\r\n        {\"nome\": \"Minas Gerais\", \"sigla\": \"MG\"},\r\n        {\"nome\": \"Pará\", \"sigla\": \"PA\"},\r\n        {\"nome\": \"Paraíba\", \"sigla\": \"PB\"},\r\n        {\"nome\": \"Paraná\", \"sigla\": \"PR\"},\r\n        {\"nome\": \"Pernambuco\", \"sigla\": \"PE\"},\r\n        {\"nome\": \"Piauí\", \"sigla\": \"PI\"},\r\n        {\"nome\": \"Rio de Janeiro\", \"sigla\": \"RJ\"},\r\n        {\"nome\": \"Rio Grande do Norte\", \"sigla\": \"RN\"},\r\n        {\"nome\": \"Rio Grande do Sul\", \"sigla\": \"RS\"},\r\n        {\"nome\": \"Rondônia\", \"sigla\": \"RO\"},\r\n        {\"nome\": \"Roraima\", \"sigla\": \"RR\"},\r\n        {\"nome\": \"Santa Catarina\", \"sigla\": \"SC\"},\r\n        {\"nome\": \"São Paulo\", \"sigla\": \"SP\"},\r\n        {\"nome\": \"Sergipe\", \"sigla\": \"SE\"},\r\n        {\"nome\": \"Tocantins\", \"sigla\": \"TO\"}\r\n      ];\r\n\r\n      public static getMock(): Estado {\r\n        const randomIndex = Math.floor(Math.random() * this.getLista().length);\r\n        return this.getLista()[randomIndex];\r\n    }\r\n\r\n    public static getLista() {\r\n      return [\r\n        {\"nome\": \"Acre\", \"sigla\": \"AC\"},\r\n        {\"nome\": \"Alagoas\", \"sigla\": \"AL\"},\r\n        {\"nome\": \"Amapá\", \"sigla\": \"AP\"},\r\n        {\"nome\": \"Amazonas\", \"sigla\": \"AM\"},\r\n        {\"nome\": \"Bahia\", \"sigla\": \"BA\"},\r\n        {\"nome\": \"Ceará\", \"sigla\": \"CE\"},\r\n        {\"nome\": \"Distrito Federal\", \"sigla\": \"DF\"},\r\n        {\"nome\": \"Espírito Santo\", \"sigla\": \"ES\"},\r\n        {\"nome\": \"Goiás\", \"sigla\": \"GO\"},\r\n        {\"nome\": \"Maranhão\", \"sigla\": \"MA\"},\r\n        {\"nome\": \"Mato Grosso\", \"sigla\": \"MT\"},\r\n        {\"nome\": \"Mato Grosso do Sul\", \"sigla\": \"MS\"},\r\n        {\"nome\": \"Minas Gerais\", \"sigla\": \"MG\"},\r\n        {\"nome\": \"Pará\", \"sigla\": \"PA\"},\r\n        {\"nome\": \"Paraíba\", \"sigla\": \"PB\"},\r\n        {\"nome\": \"Paraná\", \"sigla\": \"PR\"},\r\n        {\"nome\": \"Pernambuco\", \"sigla\": \"PE\"},\r\n        {\"nome\": \"Piauí\", \"sigla\": \"PI\"},\r\n        {\"nome\": \"Rio de Janeiro\", \"sigla\": \"RJ\"},\r\n        {\"nome\": \"Rio Grande do Norte\", \"sigla\": \"RN\"},\r\n        {\"nome\": \"Rio Grande do Sul\", \"sigla\": \"RS\"},\r\n        {\"nome\": \"Rondônia\", \"sigla\": \"RO\"},\r\n        {\"nome\": \"Roraima\", \"sigla\": \"RR\"},\r\n        {\"nome\": \"Santa Catarina\", \"sigla\": \"SC\"},\r\n        {\"nome\": \"São Paulo\", \"sigla\": \"SP\"},\r\n        {\"nome\": \"Sergipe\", \"sigla\": \"SE\"},\r\n        {\"nome\": \"Tocantins\", \"sigla\": \"TO\"}\r\n      ];\r\n    }\r\n\r\n\r\n}","export class GeralUtil {\r\n    \r\n\r\n  public static createId(): string {\r\n    let id = '';\r\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < 5; i++) {\r\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return id;\r\n  }\r\n}","import { MenuItem } from \"primeng/api\";\r\n\r\nexport class MenuService {\r\n    \r\n  public static getPositionOptions() {\r\n      return [\r\n        {\r\n            label: 'Bottom',\r\n            value: 'bottom'\r\n        },\r\n        {\r\n            label: 'Top',\r\n            value: 'top'\r\n        },\r\n        {\r\n            label: 'Left',\r\n            value: 'left'\r\n        },\r\n        {\r\n            label: 'Right',\r\n            value: 'right'\r\n        }\r\n    ];\r\n  }\r\n\r\n\r\n  public static getItemsMenuCadastro(): MenuItem[] {\r\n      return [\r\n          {\r\n              label: 'Colaboradores',\r\n              icon: './assets/images/3D-Icons/60.png',\r\n              url: './cadastro/colaborador',\r\n              target: '_self'\r\n          },\r\n          {\r\n            label: 'Parceiros',\r\n            icon: './assets/images/3D-Icons/37.png',\r\n            url: './cadastro/parceiro',\r\n            target: '_self'\r\n          },\r\n          {\r\n              label: 'Permissões',\r\n              icon: './assets/images/3D-Icons/39.png',\r\n              url: './permissoes',\r\n              target: '_self'\r\n          },\r\n          {\r\n              label: 'Endereços',\r\n              icon: './assets/images/3D-Icons/59.png',\r\n              url: './cadastro/endereco',\r\n              target: '_self'\r\n          },\r\n          {\r\n              label: 'Eventos',\r\n              icon: './assets/images/3D-Icons/13.png',\r\n              url: './eventos',\r\n              target: '_self'\r\n          },\r\n          {\r\n              label: 'Produtos',\r\n              icon: './assets/images/3D-Icons/17.png',\r\n              url: './cadastro/produto',\r\n              target: '_self'\r\n          }\r\n      ];\r\n  }\r\n\r\n  public static getItemsMenu() {\r\n    return [\r\n        {\r\n            label: 'Empresa',\r\n            icon: './assets/images/3D-Icons/52.png',\r\n            url: './empresa',\r\n            target: '_self'\r\n        },\r\n        {\r\n            label: 'Visão Empresarial',\r\n            icon: './assets/images/3D-Icons/23.png',\r\n            url: './visao',\r\n            target: '_self'\r\n        },\r\n        {\r\n            label: 'Cadastros',\r\n            icon: './assets/images/3D-Icons/32.png',\r\n            url: './cadastro',\r\n            target: '_self'\r\n        },\r\n        {\r\n            label: 'Eventos',\r\n            icon: './assets/images/3D-Icons/43.png',\r\n            url: './eventos',\r\n            target: '_self'\r\n        },\r\n        {\r\n            label: 'Permissões',\r\n            icon: './assets/images/3D-Icons/35.png',\r\n            url: './permissoes',\r\n            target: '_self'\r\n        },\r\n        {\r\n            label: 'Ranking',\r\n            icon: './assets/images/3D-Icons/55.png',\r\n            url: './ranking',\r\n            target: '_self'\r\n        },\r\n        {\r\n            label: 'Faturamento',\r\n            icon: './assets/images/3D-Icons/19.png',\r\n            url: './faturamento',\r\n            target: '_self'\r\n        },\r\n        {\r\n            label: 'Perfil',\r\n            icon: './assets/images/3D-Icons/18.png',\r\n            url: './perfil',\r\n            target: '_self'\r\n        }\r\n    ];\r\n  }\r\n\r\n  public static getResponsiveOptions() {\r\n    return [\r\n      {\r\n          breakpoint: '1024px',\r\n          numVisible: 3,\r\n          numScroll: 3\r\n      },\r\n      {\r\n          breakpoint: '768px',\r\n          numVisible: 2,\r\n          numScroll: 2\r\n      },\r\n      {\r\n          breakpoint: '560px',\r\n          numVisible: 1,\r\n          numScroll: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n\r\n}","var randomExt = require(\"random-ext\");\r\nimport { PhonyData } from \"phonydata\";\r\nlet instance = new PhonyData(); //https://www.npmjs.com/package/phonydata\r\n\r\n\r\nexport class MockRandom {\r\n\r\n    ///////////////BOOLEAN\r\n    public static getBoolean(): boolean {\r\n        return randomExt.boolean();\r\n    }\r\n\r\n    public static getBooleanArray(length: number): boolean[] {\r\n        return randomExt.booleanArray(length);\r\n    }\r\n\r\n    //////////////NUMBER\r\n    public static getDigito() : number {\r\n        return randomExt.integer(9, 0);\r\n    }\r\n\r\n    public static getInteger(min: number, max: number) : number {\r\n        return randomExt.integer(max, min);\r\n    }\r\n\r\n    public static getIntegerArray(min: number, max: number, length: number) : number {\r\n        return randomExt.integerArray(length, max, min);\r\n    }\r\n\r\n    public static getFloat(min: number, max: number) : number {\r\n        return randomExt.float(max, min);\r\n    }\r\n\r\n    public static getFloatArray(min: number, max: number, length: number): number {\r\n        return randomExt.floatArray(length, max, min);\r\n    }\r\n\r\n    public static getHex(length: number): string {\r\n        let retorno = \"\";\r\n        for (let i = 0; i < length; i++) {\r\n            retorno += instance.hexUpper;\r\n          }\r\n        return instance.hexUpper;\r\n    }\r\n\r\n    ////////////////DATE\r\n    public static getDate(): Date {\r\n        return randomExt.date(new Date());\r\n    }\r\n\r\n    public static getDateInterval(start: Date, end: Date): Date {\r\n        return randomExt.date(end, start);\r\n    }\r\n\r\n    public static getDateIntervalArray(length: number, start: Date, end: Date): Date[] {\r\n        return randomExt.dateArray(length, end, start);\r\n    }\r\n\r\n    public static getDatePast(): Date {\r\n        return randomExt.date(new Date(), new Date(1962, 6, 7, 12)); //// noon of 1962-07-07 (7th of July 1962, month is 0-indexed)\r\n    }\r\n\r\n    public static getDateFuture(): Date {\r\n        return randomExt.date(new Date(3000, 6, 7, 12), new Date());\r\n    }\r\n\r\n    // ///////////////STRINGS\r\n    public static getLetter(): string {\r\n        return instance.letterLower;\r\n    }\r\n\r\n    public static getString(): string {\r\n        return randomExt.string(20);\r\n    }\r\n\r\n    public static getWord(quantity: number): string {\r\n        return instance.words(quantity);\r\n    }\r\n\r\n    public static getSentence(): string {\r\n        return instance.loremSentence\r\n    }\r\n    \r\n    // // //Nomes\r\n    public static getName(): string {\r\n        return instance.givenName;\r\n    }\r\n\r\n    public static getFullName(): string {\r\n        return instance.personName;\r\n    }\r\n\r\n    public static getNameFemale(): string {\r\n        return instance.givenNameFemale;\r\n    }\r\n\r\n    public static getNameMale(): string {\r\n        return instance.givenNameMale;\r\n    }\r\n\r\n    // //internet\r\n    public static getUserName(): string {\r\n        return MockRandom.getName() + \"_\" + MockRandom.getName();\r\n    }\r\n\r\n    public static getPassword(length: number) {\r\n        return MockRandom.getWord(length);\r\n    }\r\n\r\n    public static getUrl(): string {\r\n        return MockRandom.getUserName() + \".com.br\";\r\n    }\r\n\r\n    public static getEmail(): string {\r\n        return MockRandom.getUserName() + \"@email.com\";\r\n    }\r\n\r\n    public static getColor(): string {\r\n        return randomExt.color();\r\n    }\r\n\r\n    public static getColorName(): string {\r\n        return instance.cssColorName;\r\n    }\r\n\r\n    // public static getCEP(): string {\r\n    //     return fakerator.random.masked('999.999.999-99')\r\n    // }\r\n\r\n    // /////////////////MASK    \r\n    // public static getTelefone(): string {\r\n    //     return fakerator.random.masked('(99)9 9999-9999')\r\n    // }\r\n\r\n    // //\"aaa-AAA_999:*\" -> \"aqa-RPG_932:6\"\r\n    // public static getMask(mask : string) {\r\n    //     return fakerator.random.masked(mask)\r\n    // }\r\n\r\n}","export const environment = {\r\n    production: false,\r\n    mock: true,\r\n    apiUrl: 'http://localhost:3000/api',\r\n    apiUrlEstados: 'http://localhost:3000/estados'\r\n    // Outras variáveis de ambiente específicas para o ambiente de desenvolvimento\r\n  };\r\n  ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HelloComponent","GoodbyeComponent","PerfilComponent","CadastroComponent","ProdutoComponent","EnderecoComponent","ColaboradorComponent","ParceiroComponent","routes","path","component","AppRoutingModule","forRoot","imports","i1","exports","PrimeNGConfig","AppComponent","constructor","primengConfig","title","ngOnInit","ripple","zIndex","modal","overlay","menu","tooltip","setTranslation","accept","reject","i0","ɵɵdirectiveInject","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","BrowserModule","FormsModule","ReactiveFormsModule","DockModule","ButtonModule","BrowserAnimationsModule","CheckboxModule","CascadeSelectModule","ChipsModule","CalendarModule","AutoCompleteModule","ColorPickerModule","DropdownModule","EditorModule","InputTextModule","RadioButtonModule","InputMaskModule","InputSwitchModule","InputTextareaModule","InputNumberModule","KnobModule","KeyFilterModule","ListboxModule","MultiSelectModule","PasswordModule","RatingModule","SelectButtonModule","SliderModule","TreeSelectModule","ToggleButtonModule","SplitButtonModule","SpeedDialModule","TableModule","ScrollerModule","OrderListModule","OrganizationChartModule","PaginatorModule","PickListModule","TreeModule","TreeTableModule","TimelineModule","AccordionModule","CardModule","DividerModule","FieldsetModule","PanelModule","SplitterModule","ScrollPanelModule","TabViewModule","ToolbarModule","ConfirmDialogModule","DialogModule","DynamicDialogModule","OverlayPanelModule","SidebarModule","TooltipModule","FileUploadModule","BreadcrumbModule","MenuModule","MenubarModule","MegaMenuModule","PanelMenuModule","StepsModule","TabMenuModule","TieredMenuModule","ChartModule","MessagesModule","ToastModule","CarouselModule","GalleriaModule","ImageModule","DragDropModule","AvatarModule","BadgeModule","ChipModule","ScrollTopModule","SkeletonModule","ProgressBarModule","ProgressSpinnerModule","FocusTrapModule","RippleModule","AutoFocusModule","AnimateModule","OverlayModule","ConfirmationService","FilterService","MessageService","MenuPrincipalComponent","TerminalComponent","FooterComponent","BackgroundCloudsComponent","ImagemService","ProdutoService","EmpresaService","ColaboradorService","IngressoService","MenuLateralComponent","EnderecoService","AppModule","bootstrap","declarations","BackgroundCloudsComponent_Template","ɵɵnamespaceSVG","FooterComponent_Template","MenuService","ɵɵpropertyInterpolate","item_r1","label","ɵɵproperty","icon","ɵɵsanitizeUrl","position","items","getItemsMenuCadastro","positionOptions","getPositionOptions","MenuLateralComponent_Template","ɵɵtemplate","MenuLateralComponent_ng_template_3_Template","ɵɵadvance","getItemsMenu","MenuPrincipalComponent_Template","MenuPrincipalComponent_ng_template_3_Template","ɵɵtext","value","TerminalComponent_Template","TerminalComponent_pre_3_Template","TerminalComponent_pre_4_Template","TerminalComponent_pre_5_Template","TerminalComponent_pre_6_Template","TerminalComponent_pre_7_Template","TerminalComponent_pre_8_Template","_r0","MockRandom","TipoPermissaoEnumMock","UsuarioMock","ContatoMock","ColaboradorMock","getMock","id","getInteger","usuario","permissoes","getMockArray","valido","getBoolean","contato","quantidade","lista","i","push","telefone","instagram","getUserName","linkedin","getString","email","getEmail","tiktok","PermissaoMock","nome","getName","nivel","descricao","getSentence","paginas","getUrl","tipo","AreaAtuacaoEnumMock","SituacaoEnumMock","IdentidadeVisualMock","EnderecoMock","EmpresaMock","razao_social","cnpj","nome_fantasia","fundado_em","getDatePast","area_atuacao","vende_alcool","status_licenca","identidade_visual","funcionarios","enderecos","getMockBySituacao","situacao","getMockByArea","area","getMockArrayByArea","getMockArrayBySituacao","ImagemMock","PaletaMock","logo_fundo_claro","logo_fundo_escuro","paleta","imagens","cor_principal","getColor","cor_secundaria","cor_texto","cor_background","cor_realce","TipoPessoaEnumMock","LoginMock","ParceiroMock","quantidade_var","tipo_pessoa","documento","nascimento","login","imagem_principal","EstadoService","EnderecoClass","cep","state","city","street","neighborhood","numero","e_principal","AreaAtuacaoEnum","randomExt","require","randomIndex","Math","floor","random","getLista","length","show","balada","aniversario15","aniversario","palestra","aula","teatro","cinema","standup","projeto","fornecedor","SituacaoEstoqueEnum","SituacaoEstoqueEnumMock","em_estoque","baixo_estoque","fora_estoque","SituacaoEnum","nao_iniciado","em_analise","processando","pendente","aprovado","reprovado","TipoImagemEnum","TipoImagemEnumMock","logo","banner","perfil","produto","TipoIngressoEnum","TipoIngressoEnumMock","normal","meia","solidaria","vip","gratuito","TipoMedidaEnum","TipoMedidaEnumMock","bebida","comida","brinde","outro","TipoPermissaoEnum","administrativo","venda","cadastro","cancelamento","exclusao","rh","ingressos","eventos","musical","influencer","TipoPessoaEnum","fisica","juridica","TipoProdutoEnum","TipoProdutoEnumMock","is_principal","largura","getFloat","altura","foto","RegraMock","IngressoMock","getWord","valor","regras","ProdutoMock","RestricoesMock","BebidaMock","ml","e_alcoolico","teor_alcoolico","restricoes","BrindeMock","e_gratis","como_conseguir","ComidaMock","g","medida","getMockByTipo","getMockArrayByTipo","e_apimentado","e_vegano","possui_lactose","possui_açucar","possui_glutem","username","senha","getPassword","apelido","cpf","imagem","ɵɵlistener","CadastroComponent_ng_template_7_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","pagina_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","abrirLink","url","name","ɵɵtextInterpolate","messageService","confirmationService","teste","undefined","valid","responsiveOptions","getResponsiveOptions","home","routerLink","items2","window","open","CadastroComponent_Template","CadastroComponent_ng_template_7_Template","GeralUtil","ColaboradorComponent_ng_template_11_ng_template_1_Template_button_click_0_listener","_r10","ctx_r9","openNew","ColaboradorComponent_ng_template_11_ng_template_1_Template_button_click_1_listener","ctx_r11","deleteSelecteds","ColaboradorComponent_ng_template_11_ng_template_1_Template_input_input_4_listener","$event","ɵɵreference","filterGlobal","target","ctx_r7","Delete","selecteds","ColaboradorComponent_ng_template_11_ng_template_1_Template","ColaboradorComponent_ng_template_11_ng_template_2_Template","ColaboradorComponent_ng_template_13_Template_button_click_17_listener","_r15","item_r13","ctx_r14","edit","ColaboradorComponent_ng_template_13_Template_button_click_18_listener","ctx_r16","delete","ɵɵpipeBind2","ɵɵtextInterpolate1","ctx_r4","ctx_r17","item","ColaboradorComponent_ng_template_16_img_2_Template","ColaboradorComponent_ng_template_16_Template_input_ngModelChange_7_listener","_r24","ctx_r23","ColaboradorComponent_ng_template_16_small_8_Template","ColaboradorComponent_ng_template_16_Template_p_calendar_ngModelChange_12_listener","ctx_r25","ColaboradorComponent_ng_template_16_Template_input_ngModelChange_16_listener","ctx_r26","ColaboradorComponent_ng_template_16_small_17_Template","ColaboradorComponent_ng_template_16_Template_p_multiSelect_ngModelChange_22_listener","ctx_r27","ColaboradorComponent_ng_template_16_Template_input_ngModelChange_27_listener","ctx_r28","ColaboradorComponent_ng_template_16_small_28_Template","ColaboradorComponent_ng_template_16_Template_input_ngModelChange_33_listener","ctx_r29","ColaboradorComponent_ng_template_16_small_34_Template","ColaboradorComponent_ng_template_16_Template_input_ngModelChange_39_listener","ctx_r30","ColaboradorComponent_ng_template_16_small_40_Template","ctx_r5","submitted","ColaboradorComponent_ng_template_17_Template_button_click_0_listener","_r32","ctx_r31","hideDialog","ColaboradorComponent_ng_template_17_Template_button_click_1_listener","ctx_r33","save","service","colaboradorDialog","getAll","getAllColaboradors","subscribe","data","error","console","confirm","message","header","filter","val","includes","add","severity","summary","detail","life","trim","findIndexById","createId","index","i2","ColaboradorComponent_Template","ColaboradorComponent_Template_p_table_selectionChange_9_listener","ColaboradorComponent_ng_template_11_Template","ColaboradorComponent_ng_template_12_Template","ColaboradorComponent_ng_template_13_Template","ColaboradorComponent_ng_template_14_Template","ColaboradorComponent_Template_p_dialog_visibleChange_15_listener","ColaboradorComponent_ng_template_16_Template","ColaboradorComponent_ng_template_17_Template","ɵɵpureFunction0","_c0","_c1","ɵɵstyleMap","_c2","EnderecoComponent_ng_template_11_ng_template_1_Template_button_click_0_listener","EnderecoComponent_ng_template_11_ng_template_1_Template_button_click_1_listener","EnderecoComponent_ng_template_11_ng_template_1_Template_input_input_4_listener","EnderecoComponent_ng_template_11_ng_template_1_Template","EnderecoComponent_ng_template_11_ng_template_2_Template","EnderecoComponent_ng_template_13_Template_button_click_14_listener","EnderecoComponent_ng_template_13_Template_button_click_15_listener","EnderecoComponent_ng_template_16_Template_input_ngModelChange_5_listener","_r22","ctx_r21","EnderecoComponent_ng_template_16_small_6_Template","EnderecoComponent_ng_template_16_Template_input_ngModelChange_11_listener","EnderecoComponent_ng_template_16_small_12_Template","EnderecoComponent_ng_template_16_Template_p_inputSwitch_ngModelChange_20_listener","ctx_r24","EnderecoComponent_ng_template_16_Template_input_ngModelChange_25_listener","EnderecoComponent_ng_template_16_small_26_Template","EnderecoComponent_ng_template_16_Template_p_inputNumber_ngModelChange_31_listener","EnderecoComponent_ng_template_16_Template_input_ngModelChange_36_listener","EnderecoComponent_ng_template_16_small_37_Template","EnderecoComponent_ng_template_16_Template_textarea_ngModelChange_42_listener","EnderecoComponent_ng_template_16_Template_p_dropdown_ngModelChange_47_listener","EnderecoComponent_ng_template_16_Template_p_dropdown_ngModelChange_52_listener","EnderecoComponent_ng_template_16_Template_input_ngModelChange_57_listener","link_maps","cidades","estados","EnderecoComponent_ng_template_17_Template_button_click_0_listener","_r33","ctx_r32","EnderecoComponent_ng_template_17_Template_button_click_1_listener","ctx_r34","productDialog","getCidades","getAllEnderecos","getCitiesByState","then","res","catch","erro","alert","product","EnderecoComponent_Template","EnderecoComponent_Template_p_table_selectionChange_9_listener","EnderecoComponent_ng_template_11_Template","EnderecoComponent_ng_template_12_Template","EnderecoComponent_ng_template_13_Template","EnderecoComponent_ng_template_14_Template","EnderecoComponent_Template_p_dialog_visibleChange_15_listener","EnderecoComponent_ng_template_16_Template","EnderecoComponent_ng_template_17_Template","ParceiroComponent_ng_template_11_ng_template_1_Template_button_click_0_listener","ParceiroComponent_ng_template_11_ng_template_1_Template_button_click_1_listener","ParceiroComponent_ng_template_11_ng_template_1_Template_input_input_4_listener","ParceiroComponent_ng_template_11_ng_template_1_Template","ParceiroComponent_ng_template_11_ng_template_2_Template","ParceiroComponent_ng_template_13_Template_button_click_17_listener","ParceiroComponent_ng_template_13_Template_button_click_18_listener","ParceiroComponent_ng_template_16_div_16_Template_input_ngModelChange_3_listener","_r28","ctx_r19","ParceiroComponent_ng_template_16_img_2_Template","ParceiroComponent_ng_template_16_Template_p_selectButton_ngModelChange_9_listener","_r30","ParceiroComponent_ng_template_16_Template_input_ngModelChange_14_listener","ParceiroComponent_ng_template_16_small_15_Template","ParceiroComponent_ng_template_16_div_16_Template","ParceiroComponent_ng_template_16_label_18_Template","ParceiroComponent_ng_template_16_label_19_Template","ParceiroComponent_ng_template_16_Template_p_calendar_ngModelChange_20_listener","ParceiroComponent_ng_template_16_Template_p_dropdown_ngModelChange_25_listener","ParceiroComponent_ng_template_16_label_28_Template","ParceiroComponent_ng_template_16_label_29_Template","ParceiroComponent_ng_template_16_Template_input_ngModelChange_30_listener","ParceiroComponent_ng_template_16_small_31_Template","ParceiroComponent_ng_template_16_Template_input_ngModelChange_36_listener","ctx_r35","ParceiroComponent_ng_template_16_small_37_Template","ParceiroComponent_ng_template_16_Template_input_ngModelChange_42_listener","ctx_r36","ParceiroComponent_ng_template_16_small_43_Template","tipos_pessoas","areas_atuacao","ParceiroComponent_ng_template_17_Template_button_click_0_listener","_r38","ctx_r37","ParceiroComponent_ng_template_17_Template_button_click_1_listener","ctx_r39","parceiroDialog","getAllParceiros","ParceiroComponent_Template","ParceiroComponent_Template_p_table_selectionChange_9_listener","ParceiroComponent_ng_template_11_Template","ParceiroComponent_ng_template_12_Template","ParceiroComponent_ng_template_13_Template","ParceiroComponent_ng_template_14_Template","ParceiroComponent_Template_p_dialog_visibleChange_15_listener","ParceiroComponent_ng_template_16_Template","ParceiroComponent_ng_template_17_Template","ProdutoComponent_ng_template_11_ng_template_1_Template_button_click_0_listener","ProdutoComponent_ng_template_11_ng_template_1_Template_button_click_1_listener","ProdutoComponent_ng_template_11_ng_template_1_Template_input_input_4_listener","ProdutoComponent_ng_template_11_ng_template_1_Template","ProdutoComponent_ng_template_11_ng_template_2_Template","ProdutoComponent_ng_template_13_Template_button_click_15_listener","ProdutoComponent_ng_template_13_Template_button_click_16_listener","preco","ProdutoComponent_ng_template_16_img_2_Template","ProdutoComponent_ng_template_16_Template_input_ngModelChange_7_listener","_r20","ProdutoComponent_ng_template_16_small_8_Template","ProdutoComponent_ng_template_16_Template_textarea_ngModelChange_12_listener","ProdutoComponent_ng_template_16_Template_p_dropdown_ngModelChange_17_listener","ctx_r22","situacao_produto","ProdutoComponent_ng_template_16_Template_p_dropdown_ngModelChange_22_listener","ProdutoComponent_ng_template_16_Template_p_inputNumber_ngModelChange_27_listener","ProdutoComponent_ng_template_16_Template_p_inputNumber_ngModelChange_32_listener","statuses","tipos","ProdutoComponent_ng_template_17_Template_button_click_0_listener","_r27","ProdutoComponent_ng_template_17_Template_button_click_1_listener","getAllProdutos","ProdutoComponent_Template","ProdutoComponent_Template_p_table_selectionChange_9_listener","ProdutoComponent_ng_template_11_Template","ProdutoComponent_ng_template_12_Template","ProdutoComponent_ng_template_13_Template","ProdutoComponent_ng_template_14_Template","ProdutoComponent_Template_p_dialog_visibleChange_15_listener","ProdutoComponent_ng_template_16_Template","ProdutoComponent_ng_template_17_Template","GoodbyeComponent_Template","FormGroup","FormControl","category_r1","key","categories","formGroup","selectedCategory","getEnderecoByCEP","cepNumber","retorno","errors","getAllEstados","getCitiesByDdd","cidade","estado","HelloComponent_Template","HelloComponent_div_5_Template","PerfilComponent_input_9_Template_input_ngModelChange_0_listener","_r7","ctx_r6","PerfilComponent_input_9_Template_input_change_0_listener","ctx_r8","validate","ctx_r0","PerfilComponent_input_10_Template_input_ngModelChange_0_listener","PerfilComponent_input_10_Template_input_change_0_listener","ctx_r1","PerfilComponent_input_15_Template_input_ngModelChange_0_listener","_r13","ctx_r12","PerfilComponent_input_15_Template_input_change_0_listener","PerfilComponent_input_16_Template_input_ngModelChange_0_listener","_r16","ctx_r15","PerfilComponent_input_16_Template_input_change_0_listener","ctx_r3","PerfilComponent_input_21_Template_input_ngModelChange_0_listener","_r19","ctx_r18","PerfilComponent_input_21_Template_input_change_0_listener","ctx_r20","PerfilComponent_input_22_Template_input_ngModelChange_0_listener","PerfilComponent_input_22_Template_input_change_0_listener","PerfilComponent_Template","PerfilComponent_input_9_Template","PerfilComponent_input_10_Template","PerfilComponent_input_15_Template","PerfilComponent_input_16_Template","PerfilComponent_input_21_Template","PerfilComponent_input_22_Template","PerfilComponent_Template_input_ngModelChange_29_listener","HttpClient","of","environment","http","apiUrl","mock","get","getColaboradorById","getAllPermissoes","addColaborador","post","updateColaborador","put","deleteColaboradorById","ɵɵinject","factory","ɵfac","providedIn","getAllEmpresas","getAllColaboradores","getEmpresasByArea","getEmpresasBySituacao","getEmpresaById","addEmpresa","empresa","updateEmpresa","deleteEmpresaById","getEnderecoById","addEndereco","updateEndereco","deleteEnderecoById","getAllImagems","getImagemById","addImagem","updateImagem","deleteImagemById","getAllIngressos","getIngressoById","addIngresso","updateIngresso","deleteIngressoById","getProdutoById","getAllByType","addProduto","updateProduto","deleteProdutoById","getBebidaById","getAllBebidasSimples","getAllBebidas","addBebida","updateBebida","deleteBebidaById","getComidaById","getAllComidasSimples","getAllComidas","addComida","updateComida","deleteComidaById","getBrindeById","getAllBrindesSimples","getAllBrindes","addBrinde","updateBrinde","deleteBrindeById","getAllOutrosSimples","getAllOutros","addOutro","updateOutro","deleteOutroById","chars","charAt","breakpoint","numVisible","numScroll","PhonyData","instance","boolean","getBooleanArray","booleanArray","getDigito","integer","min","max","getIntegerArray","integerArray","float","getFloatArray","floatArray","getHex","hexUpper","getDate","date","Date","getDateInterval","start","end","getDateIntervalArray","dateArray","getDateFuture","getLetter","letterLower","string","quantity","words","loremSentence","givenName","getFullName","personName","getNameFemale","givenNameFemale","getNameMale","givenNameMale","color","getColorName","cssColorName","production","apiUrlEstados","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}